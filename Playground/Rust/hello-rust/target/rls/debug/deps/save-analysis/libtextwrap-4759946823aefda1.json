{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4","program":"C:\\Users\\Miyu\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","textwrap","--edition=2018","C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"smawk\"","--cfg","feature=\"unicode-width\"","-C","metadata=4759946823aefda1","-C","extra-filename=-4759946823aefda1","--out-dir","c:\\Users\\Miyu\\Desktop\\Rust\\hello-rust\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Miyu\\Desktop\\Rust\\hello-rust\\target\\rls\\debug\\deps","--extern","smawk=c:\\Users\\Miyu\\Desktop\\Rust\\hello-rust\\target\\rls\\debug\\deps\\libsmawk-c0c058b719872282.rmeta","--extern","unicode_width=c:\\Users\\Miyu\\Desktop\\Rust\\hello-rust\\target\\rls\\debug\\deps\\libunicode_width-271ea92480e7eda8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Miyu\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Miyu\\Desktop\\Rust\\hello-rust\\target\\rls\\debug\\deps\\libtextwrap-4759946823aefda1.rmeta"},"prelude":{"crate_id":{"name":"textwrap","disambiguator":[14766032675915166999,11192250827497212022]},"crate_root":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src","external_crates":[{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3270634090130538391,14263718429753122316]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5532051063976025760,2256364509988431667]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7281929168992546274,2424678954744988439]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[353429176083156877,8877241423562725442]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12196241746694410349,3365331946273478086]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13433537899495627439,16859208643582984883]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8262757423788146228,17823423584984973278]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15770910386717746279,2673050061768012116]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15973938195753786773,1947565178479551552]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1495831041033125177,733230368880816191]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17679945988426249108,16004284943229030185]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4674106540844190265,14311593861468432536]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12112277384381649788,786361786206656603]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","num":14,"id":{"name":"smawk","disambiguator":[11305286503938732381,13239134502961689517]}},{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","num":15,"id":{"name":"unicode_width","disambiguator":[950607254634372046,4974988449921244551]}}],"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":0,"byte_end":63281,"line_start":1,"line_end":1894,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5623,"byte_end":5629,"line_start":177,"line_end":177,"column_start":29,"column_end":35},"alias_span":null,"name":"dedent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5659,"byte_end":5665,"line_start":178,"line_end":178,"column_start":29,"column_end":35},"alias_span":null,"name":"indent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5710,"byte_end":5724,"line_start":181,"line_end":181,"column_start":28,"column_end":42},"alias_span":null,"name":"HyphenSplitter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5710,"byte_end":5724,"line_start":181,"line_end":181,"column_start":28,"column_end":42},"alias_span":null,"name":"HyphenSplitter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5726,"byte_end":5739,"line_start":181,"line_end":181,"column_start":44,"column_end":57},"alias_span":null,"name":"NoHyphenation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5726,"byte_end":5739,"line_start":181,"line_end":181,"column_start":44,"column_end":57},"alias_span":null,"name":"NoHyphenation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5741,"byte_end":5753,"line_start":181,"line_end":181,"column_start":59,"column_end":71},"alias_span":null,"name":"WordSplitter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76843,"byte_end":76859,"line_start":38,"line_end":38,"column_start":22,"column_end":38},"alias_span":null,"name":"wrap_optimal_fit","value":"","parent":{"krate":0,"index":44}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":0,"byte_end":63281,"line_start":1,"line_end":1894,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":220},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":162}],"decl_id":null,"docs":" The textwrap library provides functions for word wrapping and\n indenting text.","sig":null,"attributes":[{"value":"/ The textwrap library provides functions for word wrapping and","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/ indenting text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":66,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Wrapping Text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":90,"byte_end":109,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":110,"byte_end":113,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Wrapping text can be very useful in command-line programs where","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":114,"byte_end":181,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/ you want to format dynamic output nicely so it looks good in a","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":182,"byte_end":248,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ terminal. A quick example:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":249,"byte_end":279,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":280,"byte_end":283,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":284,"byte_end":297,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":298,"byte_end":313,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     let text = \"textwrap: a small library for wrapping text.\";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":314,"byte_end":380,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/     println!(\"{}\", textwrap::fill(text, 18));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":381,"byte_end":430,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":431,"byte_end":436,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":437,"byte_end":444,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":445,"byte_end":448,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When you run this program, it will display the following output:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":449,"byte_end":517,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":518,"byte_end":521,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":522,"byte_end":533,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":534,"byte_end":555,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/ library for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":556,"byte_end":571,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ wrapping text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":572,"byte_end":590,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":591,"byte_end":598,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":599,"byte_end":602,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ If you enable the `hyphenation` Cargo feature, you can get","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":603,"byte_end":665,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ automatic hyphenation for a number of languages:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":666,"byte_end":718,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":719,"byte_end":722,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":723,"byte_end":736,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(feature = \"hyphenation\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":737,"byte_end":774,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/ use hyphenation::{Language, Load, Standard};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":775,"byte_end":823,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ use textwrap::{fill, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":824,"byte_end":858,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":859,"byte_end":862,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"hyphenation\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":863,"byte_end":900,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":901,"byte_end":916,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/     let text = \"textwrap: a small library for wrapping text.\";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":917,"byte_end":983,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/     let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":984,"byte_end":1063,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/     let options = Options::new(18).splitter(dictionary);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1064,"byte_end":1124,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"/     println!(\"{}\", fill(text, &options));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1125,"byte_end":1170,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1171,"byte_end":1176,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1177,"byte_end":1180,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(not(feature = \"hyphenation\"))]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1181,"byte_end":1223,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ # fn main() { }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1224,"byte_end":1243,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1244,"byte_end":1251,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1252,"byte_end":1255,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The program will now output:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1256,"byte_end":1288,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1289,"byte_end":1292,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1293,"byte_end":1304,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1305,"byte_end":1326,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/ library for wrap-","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1327,"byte_end":1348,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/ ping text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1349,"byte_end":1363,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1364,"byte_end":1371,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1372,"byte_end":1375,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ See also the [`unfill`] and [`refill`] functions which allow you to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1376,"byte_end":1447,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ manipulate already wrapped text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1448,"byte_end":1484,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1485,"byte_end":1488,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Wrapping Strings at Compile Time","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1489,"byte_end":1528,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1529,"byte_end":1532,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If your strings are known at compile time, please take a look at","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1533,"byte_end":1601,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ the procedural macros from the [textwrap-macros] crate.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1602,"byte_end":1661,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1662,"byte_end":1665,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Displayed Width vs Byte Size","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1666,"byte_end":1701,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1702,"byte_end":1705,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ To word wrap text, one must know the width of each word so one can","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1706,"byte_end":1776,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ know when to break lines. This library will by default measure the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1777,"byte_end":1847,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ width of text using the _displayed width_, not the size in bytes.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1848,"byte_end":1917,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ The `unicode-width` Cargo feature controls this.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1918,"byte_end":1970,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1971,"byte_end":1974,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This is important for non-ASCII text. ASCII characters such as `a`","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":1975,"byte_end":2045,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ and `!` are simple and take up one column each. This means that","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2046,"byte_end":2113,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ the displayed width is equal to the string length in bytes.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2114,"byte_end":2177,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/ However, non-ASCII characters and symbols take up more than one","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2178,"byte_end":2245,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ byte when UTF-8 encoded: `é` is `0xc3 0xa9` (two bytes) and `⚙` is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2246,"byte_end":2319,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ `0xe2 0x9a 0x99` (three bytes) in UTF-8, respectively.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2320,"byte_end":2378,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2379,"byte_end":2382,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This is why we take care to use the displayed width instead of the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2383,"byte_end":2453,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ byte count when computing line lengths. All functions in this","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2454,"byte_end":2519,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ library handle Unicode characters like this when the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2520,"byte_end":2576,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/ `unicode-width` Cargo feature is enabled (it is enabled by","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2577,"byte_end":2639,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/ default).","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2640,"byte_end":2653,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2654,"byte_end":2657,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Indentation and Dedentation","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2658,"byte_end":2691,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2692,"byte_end":2695,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The textwrap library also offers functions for adding a prefix to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2696,"byte_end":2765,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ every line of a string and to remove leading whitespace. As an","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2766,"byte_end":2832,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/ example, the [`indent`] function allows you to turn lines of text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2833,"byte_end":2902,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/ into a bullet list:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2903,"byte_end":2926,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2927,"byte_end":2930,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2931,"byte_end":2938,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ let before = \"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2939,"byte_end":2957,"line_start":89,"line_end":89,"column_start":1,"column_end":19}},{"value":"/ foo","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2958,"byte_end":2965,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ bar","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2966,"byte_end":2973,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ baz","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2974,"byte_end":2981,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ \";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2982,"byte_end":2988,"line_start":93,"line_end":93,"column_start":1,"column_end":7}},{"value":"/ let after = \"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":2989,"byte_end":3006,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/ * foo","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3007,"byte_end":3016,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ * bar","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3017,"byte_end":3026,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/ * baz","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3027,"byte_end":3036,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/ \";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3037,"byte_end":3043,"line_start":98,"line_end":98,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(textwrap::indent(before, \"* \"), after);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3044,"byte_end":3098,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3099,"byte_end":3106,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3107,"byte_end":3110,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Removing leading whitespace is done with [`dedent`]:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3111,"byte_end":3167,"line_start":102,"line_end":102,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3168,"byte_end":3171,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3172,"byte_end":3179,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ let before = \"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3180,"byte_end":3198,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/     Some","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3199,"byte_end":3211,"line_start":106,"line_end":106,"column_start":1,"column_end":13}},{"value":"/       indented","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3212,"byte_end":3230,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/         text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3231,"byte_end":3247,"line_start":108,"line_end":108,"column_start":1,"column_end":17}},{"value":"/ \";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3248,"byte_end":3254,"line_start":109,"line_end":109,"column_start":1,"column_end":7}},{"value":"/ let after = \"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3255,"byte_end":3272,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/ Some","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3273,"byte_end":3281,"line_start":111,"line_end":111,"column_start":1,"column_end":9}},{"value":"/   indented","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3282,"byte_end":3296,"line_start":112,"line_end":112,"column_start":1,"column_end":15}},{"value":"/     text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3297,"byte_end":3309,"line_start":113,"line_end":113,"column_start":1,"column_end":13}},{"value":"/ \";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3310,"byte_end":3316,"line_start":114,"line_end":114,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(textwrap::dedent(before), after);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3317,"byte_end":3365,"line_start":115,"line_end":115,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3366,"byte_end":3373,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3374,"byte_end":3377,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ # Cargo Features","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3378,"byte_end":3398,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3399,"byte_end":3402,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The textwrap library can be slimmed down as needed via a number of","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3403,"byte_end":3473,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ Cargo features. This means you only pay for the features you","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3474,"byte_end":3538,"line_start":121,"line_end":121,"column_start":1,"column_end":65}},{"value":"/ actually use.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3539,"byte_end":3556,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3557,"byte_end":3560,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The full dependency graph, where dashed lines indicate optional","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3561,"byte_end":3628,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"/ dependencies, is shown below:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3629,"byte_end":3662,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3663,"byte_end":3666,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ <img src=\"https://raw.githubusercontent.com/mgeisler/textwrap/master/images/textwrap-0.13.4.svg\">","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3667,"byte_end":3768,"line_start":127,"line_end":127,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3769,"byte_end":3772,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Default Features","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3773,"byte_end":3796,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3797,"byte_end":3800,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ These features are enabled by default:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3801,"byte_end":3843,"line_start":131,"line_end":131,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3844,"byte_end":3847,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ * `unicode-width`: enables correct width computation of non-ASCII","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3848,"byte_end":3917,"line_start":133,"line_end":133,"column_start":1,"column_end":70}},{"value":"/   characters via the [unicode-width] crate. Without this feature,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3918,"byte_end":3987,"line_start":134,"line_end":134,"column_start":1,"column_end":70}},{"value":"/   every [`char`] is 1 column wide, except for emojis which are 2","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":3988,"byte_end":4056,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/   columns wide. See the [`core::display_width`] function for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4057,"byte_end":4121,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/   details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4122,"byte_end":4136,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4137,"byte_end":4140,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you only need to wrap ASCII","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4141,"byte_end":4206,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/   text, or if the functions in [`core`] are used directly with","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4207,"byte_end":4273,"line_start":140,"line_end":140,"column_start":1,"column_end":67}},{"value":"/   [`core::Fragment`]s for which the widths have been computed in","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4274,"byte_end":4342,"line_start":141,"line_end":141,"column_start":1,"column_end":69}},{"value":"/   other ways.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4343,"byte_end":4360,"line_start":142,"line_end":142,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4361,"byte_end":4364,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ * `smawk`: enables linear-time wrapping of the whole paragraph via","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4365,"byte_end":4435,"line_start":144,"line_end":144,"column_start":1,"column_end":71}},{"value":"/   the [smawk] crate. See the [`core::wrap_optimal_fit`] function","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4436,"byte_end":4504,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/   for details on the optimal-fit algorithm.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4505,"byte_end":4552,"line_start":146,"line_end":146,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4553,"byte_end":4556,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you only ever intend to use","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4557,"byte_end":4622,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/   [`core::wrap_first_fit`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4623,"byte_end":4654,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4655,"byte_end":4658,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4659,"byte_end":4683,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4684,"byte_end":4687,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ These Cargo features enable new functionality:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4688,"byte_end":4738,"line_start":153,"line_end":153,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4739,"byte_end":4742,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ * `terminal_size`: enables automatic detection of the terminal","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4743,"byte_end":4809,"line_start":155,"line_end":155,"column_start":1,"column_end":67}},{"value":"/   width via the [terminal_size] crate. See the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4810,"byte_end":4860,"line_start":156,"line_end":156,"column_start":1,"column_end":51}},{"value":"/   [`Options::with_termwidth`] constructor for details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4861,"byte_end":4919,"line_start":157,"line_end":157,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4920,"byte_end":4923,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ * `hyphenation`: enables language-sensitive hyphenation via the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4924,"byte_end":4991,"line_start":159,"line_end":159,"column_start":1,"column_end":68}},{"value":"/   [hyphenation] crate. See the [`WordSplitter`] trait for details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":4992,"byte_end":5062,"line_start":160,"line_end":160,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5063,"byte_end":5066,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [unicode-width]: https://docs.rs/unicode-width/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5067,"byte_end":5118,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/ [smawk]: https://docs.rs/smawk/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5119,"byte_end":5154,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"/ [textwrap-macros]: https://docs.rs/textwrap-macros/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5155,"byte_end":5210,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"/ [terminal_size]: https://docs.rs/terminal_size/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5211,"byte_end":5262,"line_start":165,"line_end":165,"column_start":1,"column_end":52}},{"value":"/ [hyphenation]: https://docs.rs/hyphenation/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5263,"byte_end":5310,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5371,"byte_end":5394,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5450,"byte_end":5472,"line_start":170,"line_end":170,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5473,"byte_end":5512,"line_start":171,"line_end":171,"column_start":1,"column_end":40}},{"value":"allow(clippy :: redundant_field_names)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5513,"byte_end":5553,"line_start":172,"line_end":172,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64093,"byte_end":64099,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"indent","qualname":"::indentation::indent","value":"pub fn indent(&str, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Add prefix to each non-empty line.","sig":null,"attributes":[{"value":"/ Add prefix to each non-empty line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63477,"byte_end":63515,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63516,"byte_end":63519,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63520,"byte_end":63527,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63528,"byte_end":63553,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63554,"byte_end":63557,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63558,"byte_end":63581,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ Foo","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63582,"byte_end":63589,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ Bar","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63590,"byte_end":63597,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ \", \"  \"), \"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63598,"byte_end":63613,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/   Foo","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63614,"byte_end":63623,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/   Bar","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63624,"byte_end":63633,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63634,"byte_end":63641,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63642,"byte_end":63649,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63650,"byte_end":63653,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Lines consisting only of whitespace are kept unchanged:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63654,"byte_end":63713,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63714,"byte_end":63717,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63718,"byte_end":63725,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63726,"byte_end":63751,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63752,"byte_end":63755,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63756,"byte_end":63779,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ Foo","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63780,"byte_end":63787,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63788,"byte_end":63791,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Bar","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63792,"byte_end":63799,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/   \\t","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63800,"byte_end":63808,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ Baz","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63809,"byte_end":63816,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ \", \"->\"), \"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63817,"byte_end":63832,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/ ->Foo","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63833,"byte_end":63842,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63843,"byte_end":63846,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ->Bar","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63847,"byte_end":63856,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/   \\t","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63857,"byte_end":63865,"line_start":36,"line_end":36,"column_start":1,"column_end":9}},{"value":"/ ->Baz","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63866,"byte_end":63875,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63876,"byte_end":63883,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63884,"byte_end":63891,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63892,"byte_end":63895,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Leading and trailing whitespace on non-empty lines is kept","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63896,"byte_end":63958,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/ unchanged:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63959,"byte_end":63973,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63974,"byte_end":63977,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63978,"byte_end":63985,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":63986,"byte_end":64011,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64012,"byte_end":64015,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\" \\t  Foo   \", \"->\"), \"-> \\t  Foo   \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64016,"byte_end":64077,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64078,"byte_end":64085,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64810,"byte_end":64816,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"dedent","qualname":"::indentation::dedent","value":"pub fn dedent(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Removes common leading whitespace from each line.","sig":null,"attributes":[{"value":"/ Removes common leading whitespace from each line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64421,"byte_end":64474,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64475,"byte_end":64478,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This function will look at each non-empty line and determine the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64479,"byte_end":64547,"line_start":67,"line_end":67,"column_start":1,"column_end":69}},{"value":"/ maximum amount of whitespace that can be removed from all lines:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64548,"byte_end":64616,"line_start":68,"line_end":68,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64617,"byte_end":64620,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64621,"byte_end":64628,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use textwrap::dedent;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64629,"byte_end":64654,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64655,"byte_end":64658,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dedent(\"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64659,"byte_end":64682,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     1st line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64683,"byte_end":64699,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/       2nd line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64700,"byte_end":64718,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/     3rd line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64719,"byte_end":64735,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/ \"), \"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64736,"byte_end":64745,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ 1st line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64746,"byte_end":64758,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/   2nd line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64759,"byte_end":64773,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/ 3rd line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64774,"byte_end":64786,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/ \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64787,"byte_end":64794,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\indentation.rs","byte_start":64795,"byte_end":64802,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71825,"byte_end":71837,"line_start":36,"line_end":36,"column_start":11,"column_end":23},"name":"WordSplitter","qualname":"::splitting::WordSplitter","value":"WordSplitter: std::fmt::Debug","parent":null,"children":[{"krate":0,"index":18}],"decl_id":null,"docs":" The `WordSplitter` trait describes where words can be split.","sig":null,"attributes":[{"value":"/ The `WordSplitter` trait describes where words can be split.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":70719,"byte_end":70783,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":70784,"byte_end":70787,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If the textwrap crate has been compiled with the `hyphenation`","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":70788,"byte_end":70854,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ Cargo feature enabled, you will find an implementation of","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":70855,"byte_end":70916,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/ `WordSplitter` by the `hyphenation::Standard` struct. Use this","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":70917,"byte_end":70983,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/ struct for language-aware hyphenation:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":70984,"byte_end":71026,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71027,"byte_end":71030,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71031,"byte_end":71038,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ #[cfg(feature = \"hyphenation\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71039,"byte_end":71074,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/ {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71075,"byte_end":71080,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/     use hyphenation::{Language, Load, Standard};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71081,"byte_end":71133,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/     use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71134,"byte_end":71172,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71173,"byte_end":71176,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     let text = \"Oxidation is the loss of electrons.\";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71177,"byte_end":71234,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/     let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71235,"byte_end":71314,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/     let options = Options::new(8).splitter(dictionary);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71315,"byte_end":71374,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/     assert_eq!(wrap(text, &options), vec![\"Oxida-\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71375,"byte_end":71430,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/                                           \"tion is\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71431,"byte_end":71487,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/                                           \"the loss\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71488,"byte_end":71545,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/                                           \"of elec-\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71546,"byte_end":71603,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/                                           \"trons.\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71604,"byte_end":71661,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71662,"byte_end":71667,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71668,"byte_end":71675,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71676,"byte_end":71679,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the [hyphenation] crate for more","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71680,"byte_end":71749,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71750,"byte_end":71762,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71763,"byte_end":71766,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [hyphenation]: https://docs.rs/hyphenation/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71767,"byte_end":71814,"line_start":35,"line_end":35,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72479,"byte_end":72491,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"split_points","qualname":"::splitting::WordSplitter::split_points","value":"pub fn split_points(&Self, &str) -> Vec<usize>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Return all possible indices where `word` can be split.","sig":null,"attributes":[{"value":"/ Return all possible indices where `word` can be split.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71861,"byte_end":71919,"line_start":37,"line_end":37,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71924,"byte_end":71927,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The indices returned must be in range `0..word.len()`. They","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71932,"byte_end":71995,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ should point to the index _after_ the split point, i.e., after","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72000,"byte_end":72066,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/ `-` if splitting on hyphens. This way, `word.split_at(idx)`","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72071,"byte_end":72134,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/ will break the word into two well-formed pieces.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72139,"byte_end":72191,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72196,"byte_end":72199,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72204,"byte_end":72218,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72223,"byte_end":72226,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72231,"byte_end":72238,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{HyphenSplitter, NoHyphenation, WordSplitter};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72243,"byte_end":72307,"line_start":47,"line_end":47,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(NoHyphenation.split_points(\"cannot-be-split\"), vec![]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72312,"byte_end":72382,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(HyphenSplitter.split_points(\"can-be-split\"), vec![4, 7]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72387,"byte_end":72459,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72464,"byte_end":72471,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73263,"byte_end":73276,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"NoHyphenation","qualname":"::splitting::NoHyphenation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use this as a [`Options.splitter`] to avoid any kind of\n hyphenation:","sig":null,"attributes":[{"value":"/ Use this as a [`Options.splitter`] to avoid any kind of","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72871,"byte_end":72930,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ hyphenation:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72931,"byte_end":72947,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72948,"byte_end":72951,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72952,"byte_end":72959,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{wrap, NoHyphenation, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72960,"byte_end":73009,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73010,"byte_end":73013,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(8).splitter(NoHyphenation);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73014,"byte_end":73072,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(wrap(\"foo bar-baz\", &options),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73073,"byte_end":73118,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/            vec![\"foo\", \"bar-baz\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73119,"byte_end":73158,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73159,"byte_end":73166,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73167,"byte_end":73170,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`Options.splitter`]: super::Options::splitter","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73171,"byte_end":73221,"line_start":78,"line_end":78,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73735,"byte_end":73749,"line_start":96,"line_end":96,"column_start":12,"column_end":26},"name":"HyphenSplitter","qualname":"::splitting::HyphenSplitter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple and default way to split words: splitting on existing\n hyphens only.","sig":null,"attributes":[{"value":"/ Simple and default way to split words: splitting on existing","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73481,"byte_end":73545,"line_start":90,"line_end":90,"column_start":1,"column_end":65}},{"value":"/ hyphens only.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73546,"byte_end":73563,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73564,"byte_end":73567,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ You probably don't need to use this type since it's already used","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73568,"byte_end":73636,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/ by default by [`Options::new`](super::Options::new).","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73637,"byte_end":73693,"line_start":94,"line_end":94,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::core","value":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":179},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":114},{"krate":0,"index":204},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":117}],"decl_id":null,"docs":" Building blocks for advanced wrapping functionality.","sig":null,"attributes":[{"value":"/ Building blocks for advanced wrapping functionality.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75319,"byte_end":75375,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75376,"byte_end":75379,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The functions and structs in this module can be used to implement","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75380,"byte_end":75449,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ advanced wrapping functionality when the [`wrap`](super::wrap) and","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75450,"byte_end":75520,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`fill`](super::fill) function don't do what you want.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75521,"byte_end":75579,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75580,"byte_end":75583,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ In general, you want to follow these steps when wrapping","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75584,"byte_end":75644,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ something:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75645,"byte_end":75659,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75660,"byte_end":75663,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ 1. Split your input into [`Fragment`]s. These are abstract blocks","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75664,"byte_end":75733,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/    of text or content which can be wrapped into lines. You can use","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75734,"byte_end":75804,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/    [`find_words`] to do this for text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75805,"byte_end":75847,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75848,"byte_end":75851,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ 2. Potentially split your fragments into smaller pieces. This","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75852,"byte_end":75917,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/    allows you to implement things like hyphenation. If wrapping","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75918,"byte_end":75985,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/    text, [`split_words`] can help you do this.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":75986,"byte_end":76036,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76037,"byte_end":76040,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ 3. Potentially break apart fragments that are still too large to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76041,"byte_end":76109,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/    fit on a single line. This is implemented in [`break_words`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76110,"byte_end":76178,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76179,"byte_end":76182,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ 4. Finally take your fragments and put them into lines. There are","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76183,"byte_end":76252,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/    two algorithms for this: [`wrap_optimal_fit`] and","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76253,"byte_end":76309,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/    [`wrap_first_fit`]. The former produces better line breaks, the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76310,"byte_end":76380,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/    latter is faster.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76381,"byte_end":76405,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76406,"byte_end":76409,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ 5. Iterate through the slices returned by the wrapping functions","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76410,"byte_end":76478,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/    and construct your lines of output.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76479,"byte_end":76521,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76522,"byte_end":76525,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Please [open an issue](https://github.com/mgeisler/textwrap/) if","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76526,"byte_end":76594,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ the functionality here is not sufficient or if you have ideas for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76595,"byte_end":76664,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ improving it. We would love to hear from you!","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":76665,"byte_end":76714,"line_start":31,"line_end":31,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":112159,"byte_end":112175,"line_start":156,"line_end":156,"column_start":8,"column_end":24},"name":"wrap_optimal_fit","qualname":"::core::optimal_fit::wrap_optimal_fit","value":"pub fn wrap_optimal_fit<'a, T: Fragment, F: Fn(usize) -> usize>(&'a [T], F)\n-> Vec<&'a [T]>","parent":null,"children":[],"decl_id":null,"docs":" Wrap abstract fragments into lines with an optimal-fit algorithm.","sig":null,"attributes":[{"value":"/ Wrap abstract fragments into lines with an optimal-fit algorithm.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109155,"byte_end":109224,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109225,"byte_end":109228,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The `line_widths` map line numbers (starting from 0) to a target","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109229,"byte_end":109297,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ line width. This can be used to implement hanging indentation.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109298,"byte_end":109364,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109365,"byte_end":109368,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ The fragments must already have been split into the desired","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109369,"byte_end":109432,"line_start":87,"line_end":87,"column_start":1,"column_end":64}},{"value":"/ widths, this function will not (and cannot) attempt to split them","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109433,"byte_end":109502,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/ further when arranging them into lines.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109503,"byte_end":109546,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109547,"byte_end":109550,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Optimal-Fit Algorithm","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109551,"byte_end":109578,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109579,"byte_end":109582,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The algorithm considers all possible break points and picks the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109583,"byte_end":109650,"line_start":93,"line_end":93,"column_start":1,"column_end":68}},{"value":"/ breaks which minimizes the gaps at the end of each line. More","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109651,"byte_end":109716,"line_start":94,"line_end":94,"column_start":1,"column_end":66}},{"value":"/ precisely, the algorithm assigns a cost or penalty to each break","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109717,"byte_end":109785,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/ point, determined by `cost = gap * gap` where `gap = target_width -","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109786,"byte_end":109857,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/ line_width`. Shorter lines are thus penalized more heavily since","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109858,"byte_end":109926,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/ they leave behind a larger gap.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109927,"byte_end":109962,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109963,"byte_end":109966,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ We can illustrate this with the text “To be, or not to be: that is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":109967,"byte_end":110039,"line_start":100,"line_end":100,"column_start":1,"column_end":71}},{"value":"/ the question”. We will be wrapping it in a narrow column with room","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110040,"byte_end":110112,"line_start":101,"line_end":101,"column_start":1,"column_end":71}},{"value":"/ for only 10 characters. The [greedy","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110113,"byte_end":110152,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/ algorithm](super::wrap_first_fit) will produce these lines, each","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110153,"byte_end":110221,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/ annotated with the corresponding penalty:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110222,"byte_end":110267,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110268,"byte_end":110271,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110272,"byte_end":110283,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ \"To be, or\"   1² =  1","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110284,"byte_end":110310,"line_start":107,"line_end":107,"column_start":1,"column_end":26}},{"value":"/ \"not to be:\"  0² =  0","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110311,"byte_end":110337,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"/ \"that is\"     3² =  9","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110338,"byte_end":110364,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/ \"the\"         7² = 49","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110365,"byte_end":110391,"line_start":110,"line_end":110,"column_start":1,"column_end":26}},{"value":"/ \"question\"    2² =  4","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110392,"byte_end":110418,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110419,"byte_end":110426,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110427,"byte_end":110430,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ We see that line four with “the” leaves a gap of 7 columns, which","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110431,"byte_end":110504,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ gives it a penalty of 49. The sum of the penalties is 63.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110505,"byte_end":110566,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110567,"byte_end":110570,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ There are 10 words, which means that there are `2_u32.pow(9)` or","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110571,"byte_end":110639,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"/ 512 different ways to typeset it. We can compute","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110640,"byte_end":110692,"line_start":118,"line_end":118,"column_start":1,"column_end":53}},{"value":"/ the sum of the penalties for each possible line break and search","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110693,"byte_end":110761,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ for the one with the lowest sum:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110762,"byte_end":110798,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110799,"byte_end":110802,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110803,"byte_end":110814,"line_start":122,"line_end":122,"column_start":1,"column_end":12}},{"value":"/ \"To be,\"     4² = 16","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110815,"byte_end":110840,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/ \"or not to\"  1² =  1","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110841,"byte_end":110866,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/ \"be: that\"   2² =  4","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110867,"byte_end":110892,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"/ \"is the\"     4² = 16","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110893,"byte_end":110918,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/ \"question\"   2² =  4","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110919,"byte_end":110944,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110945,"byte_end":110952,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110953,"byte_end":110956,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The sum of the penalties is 41, which is better than what the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":110957,"byte_end":111022,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ greedy algorithm produced.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111023,"byte_end":111053,"line_start":131,"line_end":131,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111054,"byte_end":111057,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Searching through all possible combinations would normally be","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111058,"byte_end":111123,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/ prohibitively slow. However, it turns out that the problem can be","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111124,"byte_end":111193,"line_start":134,"line_end":134,"column_start":1,"column_end":70}},{"value":"/ formulated as the task of finding column minima in a cost matrix.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111194,"byte_end":111263,"line_start":135,"line_end":135,"column_start":1,"column_end":70}},{"value":"/ This matrix has a special form (totally monotone) which lets us","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111264,"byte_end":111331,"line_start":136,"line_end":136,"column_start":1,"column_end":68}},{"value":"/ use a [linear-time algorithm called","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111332,"byte_end":111371,"line_start":137,"line_end":137,"column_start":1,"column_end":40}},{"value":"/ SMAWK](https://lib.rs/crates/smawk) to find the optimal break","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111372,"byte_end":111437,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ points.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111438,"byte_end":111449,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111450,"byte_end":111453,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This means that the time complexity remains O(_n_) where _n_ is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111454,"byte_end":111521,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ the number of words. Compared to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111522,"byte_end":111558,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/ [`wrap_first_fit`](super::wrap_first_fit), this function is about","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111559,"byte_end":111628,"line_start":143,"line_end":143,"column_start":1,"column_end":70}},{"value":"/ 4 times slower.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111629,"byte_end":111648,"line_start":144,"line_end":144,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111649,"byte_end":111652,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ The optimization of per-line costs over the entire paragraph is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111653,"byte_end":111720,"line_start":146,"line_end":146,"column_start":1,"column_end":68}},{"value":"/ inspired by the line breaking algorithm used in TeX, as described","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111721,"byte_end":111790,"line_start":147,"line_end":147,"column_start":1,"column_end":70}},{"value":"/ in the 1981 article [_Breaking Paragraphs into","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111791,"byte_end":111841,"line_start":148,"line_end":148,"column_start":1,"column_end":51}},{"value":"/ Lines_](http://www.eprg.org/G53DOC/pdfs/knuth-plass-breaking.pdf)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111842,"byte_end":111911,"line_start":149,"line_end":149,"column_start":1,"column_end":70}},{"value":"/ by Knuth and Plass. The implementation here is based on [Python","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111912,"byte_end":111979,"line_start":150,"line_end":150,"column_start":1,"column_end":68}},{"value":"/ code by David","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111980,"byte_end":111997,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/ Eppstein](https://github.com/jfinkels/PADS/blob/master/pads/wrap.py).","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":111998,"byte_end":112071,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":112072,"byte_end":112075,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ **Note:** Only available when the `smawk` Cargo feature is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":112076,"byte_end":112138,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":112139,"byte_end":112151,"line_start":155,"line_end":155,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82345,"byte_end":82358,"line_start":179,"line_end":179,"column_start":8,"column_end":21},"name":"display_width","qualname":"::core::display_width","value":"pub fn display_width(&str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute the display width of `text` while skipping over ANSI\n escape sequences.","sig":null,"attributes":[{"value":"/ Compute the display width of `text` while skipping over ANSI","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78398,"byte_end":78462,"line_start":86,"line_end":86,"column_start":1,"column_end":65}},{"value":"/ escape sequences.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78463,"byte_end":78484,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78485,"byte_end":78488,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78489,"byte_end":78503,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78504,"byte_end":78507,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78508,"byte_end":78515,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78516,"byte_end":78554,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78555,"byte_end":78558,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"Café Plain\"), 10);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78559,"byte_end":78608,"line_start":94,"line_end":94,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(display_width(\"\\u{1b}[31mCafé Rouge\\u{1b}[0m\"), 10);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78609,"byte_end":78677,"line_start":95,"line_end":95,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78678,"byte_end":78685,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78686,"byte_end":78689,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ **Note:** When the `unicode-width` Cargo feature is disabled, the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78690,"byte_end":78759,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/ width of a `char` is determined by a crude approximation which","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78760,"byte_end":78826,"line_start":99,"line_end":99,"column_start":1,"column_end":67}},{"value":"/ simply counts chars below U+1100 as 1 column wide, and all other","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78827,"byte_end":78895,"line_start":100,"line_end":100,"column_start":1,"column_end":69}},{"value":"/ characters as 2 columns wide. With the feature enabled, function","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78896,"byte_end":78964,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/ will correctly deal with [combining characters] in their","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":78965,"byte_end":79025,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/ decomposed form (see [Unicode equivalence]).","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79026,"byte_end":79074,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79075,"byte_end":79078,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ An example of a decomposed character is “é”, which can be","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79079,"byte_end":79145,"line_start":105,"line_end":105,"column_start":1,"column_end":62}},{"value":"/ decomposed into: “e” followed by a combining acute accent: “◌́”.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79146,"byte_end":79225,"line_start":106,"line_end":106,"column_start":1,"column_end":69}},{"value":"/ Without the `unicode-width` Cargo feature, every `char` below","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79226,"byte_end":79291,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/ U+1100 has a width of 1. This includes the combining accent:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79292,"byte_end":79356,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79357,"byte_end":79360,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79361,"byte_end":79368,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79369,"byte_end":79407,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79408,"byte_end":79411,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"Cafe Plain\"), 10);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79412,"byte_end":79460,"line_start":113,"line_end":113,"column_start":1,"column_end":49}},{"value":"/ #[cfg(feature = \"unicode-width\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79461,"byte_end":79498,"line_start":114,"line_end":114,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(display_width(\"Cafe\\u{301} Plain\"), 10);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79499,"byte_end":79554,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ #[cfg(not(feature = \"unicode-width\"))]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79555,"byte_end":79597,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(display_width(\"Cafe\\u{301} Plain\"), 11);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79598,"byte_end":79653,"line_start":117,"line_end":117,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79654,"byte_end":79661,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79662,"byte_end":79665,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ## Emojis and CJK Characters","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79666,"byte_end":79698,"line_start":120,"line_end":120,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79699,"byte_end":79702,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Characters such as emojis and [CJK characters] used in the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79703,"byte_end":79765,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/ Chinese, Japanese, and Korean langauges are seen as double-width,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79766,"byte_end":79835,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/ even if the `unicode-width` feature is disabled:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79836,"byte_end":79888,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79889,"byte_end":79892,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79893,"byte_end":79900,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79901,"byte_end":79939,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79940,"byte_end":79943,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"😂😭🥺🤣✨😍🙏🥰😊🔥\"), 20);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":79944,"byte_end":80021,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(display_width(\"你好\"), 4);  // “Nǐ hǎo” or “Hello” in Chinese","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80022,"byte_end":80110,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80111,"byte_end":80118,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80119,"byte_end":80122,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80123,"byte_end":80140,"line_start":133,"line_end":133,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80141,"byte_end":80144,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The displayed width of a string cannot always be computed from the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80145,"byte_end":80215,"line_start":135,"line_end":135,"column_start":1,"column_end":71}},{"value":"/ string alone. This is because the width depends on the rendering","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80216,"byte_end":80284,"line_start":136,"line_end":136,"column_start":1,"column_end":69}},{"value":"/ engine used. This is particularly visible with [emoji modifier","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80285,"byte_end":80351,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"/ sequences] where a base emoji is modified with, e.g., skin tone or","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80352,"byte_end":80422,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ hair color modifiers. It is up to the rendering engine to detect","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80423,"byte_end":80491,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/ this and to produce a suitable emoji.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80492,"byte_end":80533,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80534,"byte_end":80537,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ A simple example is “❤️”, which consists of “❤” (U+2764: Black","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80538,"byte_end":80618,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/ Heart Symbol) followed by U+FE0F (Variation Selector-16). By","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80619,"byte_end":80683,"line_start":143,"line_end":143,"column_start":1,"column_end":65}},{"value":"/ itself, “❤” is a black heart, but if you follow it with the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80684,"byte_end":80753,"line_start":144,"line_end":144,"column_start":1,"column_end":64}},{"value":"/ variant selector, you may get a wider red heart.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80754,"byte_end":80806,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80807,"byte_end":80810,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ A more complex example would be “👨‍🦰” which should depict a man","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80811,"byte_end":80890,"line_start":147,"line_end":147,"column_start":1,"column_end":68}},{"value":"/ with red hair. Here the computed width is too large — and the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80891,"byte_end":80958,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/ width differs depending on the use of the `unicode-width` feature:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":80959,"byte_end":81029,"line_start":149,"line_end":149,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81030,"byte_end":81033,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81034,"byte_end":81041,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81042,"byte_end":81080,"line_start":152,"line_end":152,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81081,"byte_end":81084,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"👨‍🦰\".chars().collect::<Vec<char>>(), ['\\u{1f468}', '\\u{200d}', '\\u{1f9b0}']);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81085,"byte_end":81186,"line_start":154,"line_end":154,"column_start":1,"column_end":94}},{"value":"/ #[cfg(feature = \"unicode-width\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81187,"byte_end":81224,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(display_width(\"👨‍🦰\"), 4);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81225,"byte_end":81273,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/ #[cfg(not(feature = \"unicode-width\"))]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81274,"byte_end":81316,"line_start":157,"line_end":157,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(display_width(\"👨‍🦰\"), 6);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81317,"byte_end":81365,"line_start":158,"line_end":158,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81366,"byte_end":81373,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81374,"byte_end":81377,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ This happens because the grapheme consists of three code points:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81378,"byte_end":81446,"line_start":161,"line_end":161,"column_start":1,"column_end":69}},{"value":"/ “👨” (U+1F468: Man), Zero Width Joiner (U+200D), and “🦰”","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81447,"byte_end":81520,"line_start":162,"line_end":162,"column_start":1,"column_end":60}},{"value":"/ (U+1F9B0: Red Hair). You can see them above in the test. With","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81521,"byte_end":81586,"line_start":163,"line_end":163,"column_start":1,"column_end":66}},{"value":"/ `unicode-width` enabled, the ZWJ is correctly seen as having zero","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81587,"byte_end":81656,"line_start":164,"line_end":164,"column_start":1,"column_end":70}},{"value":"/ width, without it is counted as a double-width character.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81657,"byte_end":81718,"line_start":165,"line_end":165,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81719,"byte_end":81722,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## Terminal Support","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81723,"byte_end":81746,"line_start":167,"line_end":167,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81747,"byte_end":81750,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Modern browsers typically do a great job at combining characters","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81751,"byte_end":81819,"line_start":169,"line_end":169,"column_start":1,"column_end":69}},{"value":"/ as shown above, but terminals often struggle more. As an example,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81820,"byte_end":81889,"line_start":170,"line_end":170,"column_start":1,"column_end":70}},{"value":"/ Gnome Terminal version 3.38.1, shows “❤️” as a big red heart, but","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81890,"byte_end":81967,"line_start":171,"line_end":171,"column_start":1,"column_end":70}},{"value":"/ shows \"👨‍🦰\" as “👨🦰”.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":81968,"byte_end":82010,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82011,"byte_end":82014,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [combining characters]: https://en.wikipedia.org/wiki/Combining_character","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82015,"byte_end":82092,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ [Unicode equivalence]: https://en.wikipedia.org/wiki/Unicode_equivalence","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82093,"byte_end":82169,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ [CJK characters]: https://en.wikipedia.org/wiki/CJK_characters","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82170,"byte_end":82236,"line_start":176,"line_end":176,"column_start":1,"column_end":67}},{"value":"/ [emoji modifier sequences]: https://unicode.org/emoji/charts/full-emoji-modifiers.html","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82237,"byte_end":82327,"line_start":177,"line_end":177,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82328,"byte_end":82337,"line_start":178,"line_end":178,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83160,"byte_end":83168,"line_start":201,"line_end":201,"column_start":11,"column_end":19},"name":"Fragment","qualname":"::core::Fragment","value":"Fragment: std::fmt::Debug","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" A (text) fragment denotes the unit which we wrap into lines.","sig":null,"attributes":[{"value":"/ A (text) fragment denotes the unit which we wrap into lines.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82616,"byte_end":82680,"line_start":191,"line_end":191,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82681,"byte_end":82684,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Fragments represent an abstract _word_ plus the _whitespace_","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82685,"byte_end":82749,"line_start":193,"line_end":193,"column_start":1,"column_end":65}},{"value":"/ following the word. In case the word falls at the end of the line,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82750,"byte_end":82820,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"/ the whitespace is dropped and a so-called _penalty_ is inserted","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82821,"byte_end":82888,"line_start":195,"line_end":195,"column_start":1,"column_end":68}},{"value":"/ instead (typically `\"-\"` if the word was hyphenated).","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82889,"byte_end":82946,"line_start":196,"line_end":196,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82947,"byte_end":82950,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ For wrapping purposes, the precise content of the word, the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":82951,"byte_end":83014,"line_start":198,"line_end":198,"column_start":1,"column_end":64}},{"value":"/ whitespace, and the penalty is irrelevant. All we need to know is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83015,"byte_end":83084,"line_start":199,"line_end":199,"column_start":1,"column_end":70}},{"value":"/ the displayed width of each part, which this trait provides.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83085,"byte_end":83149,"line_start":200,"line_end":200,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83257,"byte_end":83262,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"width","qualname":"::core::Fragment::width","value":"pub fn width(&Self) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Displayed width of word represented by this fragment.\n","sig":null,"attributes":[{"value":"/ Displayed width of word represented by this fragment.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83192,"byte_end":83249,"line_start":202,"line_end":202,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83407,"byte_end":83423,"line_start":207,"line_end":207,"column_start":8,"column_end":24},"name":"whitespace_width","qualname":"::core::Fragment::whitespace_width","value":"pub fn whitespace_width(&Self) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Displayed width of the whitespace that must follow the word\n when the word is not at the end of a line.\n","sig":null,"attributes":[{"value":"/ Displayed width of the whitespace that must follow the word","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83285,"byte_end":83348,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/ when the word is not at the end of a line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83353,"byte_end":83399,"line_start":206,"line_end":206,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83558,"byte_end":83571,"line_start":211,"line_end":211,"column_start":8,"column_end":21},"name":"penalty_width","qualname":"::core::Fragment::penalty_width","value":"pub fn penalty_width(&Self) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Displayed width of the penalty that must be inserted if the\n word falls at the end of a line.\n","sig":null,"attributes":[{"value":"/ Displayed width of the penalty that must be inserted if the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83446,"byte_end":83509,"line_start":209,"line_end":209,"column_start":5,"column_end":68}},{"value":"/ word falls at the end of a line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83514,"byte_end":83550,"line_start":210,"line_end":210,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83840,"byte_end":83844,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"Word","qualname":"::core::Word","value":"Word {  }","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" A piece of wrappable text, including any trailing whitespace.","sig":null,"attributes":[{"value":"/ A piece of wrappable text, including any trailing whitespace.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83592,"byte_end":83657,"line_start":214,"line_end":214,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83658,"byte_end":83661,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ A `Word` is an example of a [`Fragment`], so it has a width,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83662,"byte_end":83726,"line_start":216,"line_end":216,"column_start":1,"column_end":65}},{"value":"/ trailing whitespace, and potentially a penalty item.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83727,"byte_end":83783,"line_start":217,"line_end":217,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84263,"byte_end":84267,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"from","qualname":"<Word>::from","value":"pub fn from(&str) -> Word","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Word`.","sig":null,"attributes":[{"value":"/ Construct a new `Word`.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84110,"byte_end":84137,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84142,"byte_end":84145,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ A trailing stretch of `' '` is automatically taken to be the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84150,"byte_end":84214,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/ whitespace part of the word.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84219,"byte_end":84251,"line_start":238,"line_end":238,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84952,"byte_end":84963,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"break_apart","qualname":"<Word>::break_apart","value":"pub fn break_apart<'b>(&'b Self, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Break this word into smaller words with a width of at most\n `line_width`. The whitespace and penalty from this `Word` is\n added to the last piece.","sig":null,"attributes":[{"value":"/ Break this word into smaller words with a width of at most","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84524,"byte_end":84586,"line_start":249,"line_end":249,"column_start":5,"column_end":67}},{"value":"/ `line_width`. The whitespace and penalty from this `Word` is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84591,"byte_end":84655,"line_start":250,"line_end":250,"column_start":5,"column_end":69}},{"value":"/ added to the last piece.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84660,"byte_end":84688,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84693,"byte_end":84696,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84701,"byte_end":84715,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84720,"byte_end":84723,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84728,"byte_end":84735,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84740,"byte_end":84769,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84774,"byte_end":84789,"line_start":257,"line_end":257,"column_start":5,"column_end":20}},{"value":"/     Word::from(\"Hello!  \").break_apart(3).collect::<Vec<_>>(),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84794,"byte_end":84860,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/     vec![Word::from(\"Hel\"), Word::from(\"lo!  \")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84865,"byte_end":84917,"line_start":259,"line_end":259,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84922,"byte_end":84928,"line_start":260,"line_end":260,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84933,"byte_end":84940,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":87236,"byte_end":87246,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"find_words","qualname":"::core::find_words","value":"pub fn find_words(&str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Split line into words separated by regions of `' '` characters.","sig":null,"attributes":[{"value":"/ Split line into words separated by regions of `' '` characters.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86801,"byte_end":86868,"line_start":325,"line_end":325,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86869,"byte_end":86872,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86873,"byte_end":86887,"line_start":327,"line_end":327,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86888,"byte_end":86891,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86892,"byte_end":86899,"line_start":329,"line_end":329,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::{find_words, Fragment, Word};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86900,"byte_end":86953,"line_start":330,"line_end":330,"column_start":1,"column_end":54}},{"value":"/ let words = find_words(\"Hello World!\").collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86954,"byte_end":87017,"line_start":331,"line_end":331,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(words, vec![Word::from(\"Hello \"), Word::from(\"World!\")]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":87018,"byte_end":87090,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(words[0].width(), 5);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":87091,"byte_end":87127,"line_start":333,"line_end":333,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(words[0].whitespace_width(), 1);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":87128,"byte_end":87175,"line_start":334,"line_end":334,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(words[0].penalty_width(), 0);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":87176,"byte_end":87220,"line_start":335,"line_end":335,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":87221,"byte_end":87228,"line_start":336,"line_end":336,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":89113,"byte_end":89124,"line_start":397,"line_end":397,"column_start":8,"column_end":19},"name":"split_words","qualname":"::core::split_words","value":"pub fn split_words<'a, I, S, Opt>(I, Opt) -> /*impl Trait*/ where\nI: IntoIterator<Item = Word>, S: WordSplitter, Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Split words into smaller words according to the split points given\n by `options`.","sig":null,"attributes":[{"value":"/ Split words into smaller words according to the split points given","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88190,"byte_end":88260,"line_start":370,"line_end":370,"column_start":1,"column_end":71}},{"value":"/ by `options`.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88261,"byte_end":88278,"line_start":371,"line_end":371,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88279,"byte_end":88282,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ Note that we split all words, regardless of their length. This is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88283,"byte_end":88352,"line_start":373,"line_end":373,"column_start":1,"column_end":70}},{"value":"/ to more cleanly separate the business of splitting (including","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88353,"byte_end":88418,"line_start":374,"line_end":374,"column_start":1,"column_end":66}},{"value":"/ automatic hyphenation) from the business of word wrapping.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88419,"byte_end":88481,"line_start":375,"line_end":375,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88482,"byte_end":88485,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88486,"byte_end":88500,"line_start":377,"line_end":377,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88501,"byte_end":88504,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88505,"byte_end":88512,"line_start":379,"line_end":379,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::{split_words, Word};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88513,"byte_end":88557,"line_start":380,"line_end":380,"column_start":1,"column_end":45}},{"value":"/ use textwrap::{NoHyphenation, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88558,"byte_end":88601,"line_start":381,"line_end":381,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88602,"byte_end":88605,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ // The default splitter is HyphenSplitter:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88606,"byte_end":88652,"line_start":383,"line_end":383,"column_start":1,"column_end":47}},{"value":"/ let options = Options::new(80);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88653,"byte_end":88688,"line_start":384,"line_end":384,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88689,"byte_end":88704,"line_start":385,"line_end":385,"column_start":1,"column_end":16}},{"value":"/     split_words(vec![Word::from(\"foo-bar\")], &options).collect::<Vec<_>>(),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88705,"byte_end":88784,"line_start":386,"line_end":386,"column_start":1,"column_end":80}},{"value":"/     vec![Word::from(\"foo-\"), Word::from(\"bar\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88785,"byte_end":88836,"line_start":387,"line_end":387,"column_start":1,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88837,"byte_end":88843,"line_start":388,"line_end":388,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88844,"byte_end":88847,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ // The NoHyphenation splitter ignores the '-':","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88848,"byte_end":88898,"line_start":390,"line_end":390,"column_start":1,"column_end":51}},{"value":"/ let options = Options::new(80).splitter(NoHyphenation);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88899,"byte_end":88958,"line_start":391,"line_end":391,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88959,"byte_end":88974,"line_start":392,"line_end":392,"column_start":1,"column_end":16}},{"value":"/     split_words(vec![Word::from(\"foo-bar\")], &options).collect::<Vec<_>>(),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":88975,"byte_end":89054,"line_start":393,"line_end":393,"column_start":1,"column_end":80}},{"value":"/     vec![Word::from(\"foo-bar\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":89055,"byte_end":89090,"line_start":394,"line_end":394,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":89091,"byte_end":89097,"line_start":395,"line_end":395,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":89098,"byte_end":89105,"line_start":396,"line_end":396,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":90649,"byte_end":90660,"line_start":442,"line_end":442,"column_start":8,"column_end":19},"name":"break_words","qualname":"::core::break_words","value":"pub fn break_words<'a, I>(I, usize) -> Vec<Word> where I: IntoIterator<Item =\nWord>","parent":null,"children":[],"decl_id":null,"docs":" Forcibly break words wider than `line_width` into smaller words.","sig":null,"attributes":[{"value":"/ Forcibly break words wider than `line_width` into smaller words.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":90398,"byte_end":90466,"line_start":437,"line_end":437,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":90467,"byte_end":90470,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ This simply calls [`Word::break_apart`] on words that are too","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":90471,"byte_end":90536,"line_start":439,"line_end":439,"column_start":1,"column_end":66}},{"value":"/ wide. This means that no extra `'-'` is inserted, the word is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":90537,"byte_end":90602,"line_start":440,"line_end":440,"column_start":1,"column_end":66}},{"value":"/ simply broken into smaller pieces.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":90603,"byte_end":90641,"line_start":441,"line_end":441,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92271,"byte_end":92281,"line_start":482,"line_end":482,"column_start":5,"column_end":15},"name":"OptimalFit","qualname":"::core::WrapAlgorithm::OptimalFit","value":"WrapAlgorithm::OptimalFit","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Use an advanced algorithm which considers the entire paragraph\n to find optimal line breaks. Implemented by\n [`wrap_optimal_fit`].","sig":null,"attributes":[{"value":"/ Use an advanced algorithm which considers the entire paragraph","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91996,"byte_end":92062,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/ to find optimal line breaks. Implemented by","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92067,"byte_end":92114,"line_start":476,"line_end":476,"column_start":5,"column_end":52}},{"value":"/ [`wrap_optimal_fit`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92119,"byte_end":92144,"line_start":477,"line_end":477,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92149,"byte_end":92152,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ **Note:** Only available when the `smawk` Cargo feature is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92157,"byte_end":92219,"line_start":479,"line_end":479,"column_start":5,"column_end":67}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92224,"byte_end":92236,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"cfg(feature = \"smawk\")","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92241,"byte_end":92266,"line_start":481,"line_end":481,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92410,"byte_end":92418,"line_start":485,"line_end":485,"column_start":5,"column_end":13},"name":"FirstFit","qualname":"::core::WrapAlgorithm::FirstFit","value":"WrapAlgorithm::FirstFit","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Use a fast and simple algorithm with no look-ahead to find\n line breaks. Implemented by [`wrap_first_fit`].\n","sig":null,"attributes":[{"value":"/ Use a fast and simple algorithm with no look-ahead to find","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92287,"byte_end":92349,"line_start":483,"line_end":483,"column_start":5,"column_end":67}},{"value":"/ line breaks. Implemented by [`wrap_first_fit`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92354,"byte_end":92405,"line_start":484,"line_end":484,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91976,"byte_end":91989,"line_start":474,"line_end":474,"column_start":10,"column_end":23},"name":"WrapAlgorithm","qualname":"::core::WrapAlgorithm","value":"pub enum WrapAlgorithm { OptimalFit, FirstFit, }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":207}],"decl_id":null,"docs":" Wrapping algorithms.","sig":null,"attributes":[{"value":"/ Wrapping algorithms.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91027,"byte_end":91051,"line_start":457,"line_end":457,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91052,"byte_end":91055,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ After a text has been broken into [`Fragment`]s, the one now has","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91056,"byte_end":91124,"line_start":459,"line_end":459,"column_start":1,"column_end":69}},{"value":"/ to decide how to break the fragments into lines. The simplest","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91125,"byte_end":91190,"line_start":460,"line_end":460,"column_start":1,"column_end":66}},{"value":"/ algorithm for this is implemented by [`wrap_first_fit`]: it uses","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91191,"byte_end":91259,"line_start":461,"line_end":461,"column_start":1,"column_end":69}},{"value":"/ no look-ahead and simply adds fragments to the line as long as","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91260,"byte_end":91326,"line_start":462,"line_end":462,"column_start":1,"column_end":67}},{"value":"/ they fit. However, this can lead to poor line breaks if a large","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91327,"byte_end":91394,"line_start":463,"line_end":463,"column_start":1,"column_end":68}},{"value":"/ fragment almost-but-not-quite fits on a line. When that happens,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91395,"byte_end":91463,"line_start":464,"line_end":464,"column_start":1,"column_end":69}},{"value":"/ the fragment is moved to the next line and it will leave behind a","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91464,"byte_end":91533,"line_start":465,"line_end":465,"column_start":1,"column_end":70}},{"value":"/ large gap. A more advanced algorithm, implemented by","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91534,"byte_end":91590,"line_start":466,"line_end":466,"column_start":1,"column_end":57}},{"value":"/ [`wrap_optimal_fit`], will take this into account. The optimal-fit","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91591,"byte_end":91661,"line_start":467,"line_end":467,"column_start":1,"column_end":71}},{"value":"/ algorithm considers all possible line breaks and will attempt to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91662,"byte_end":91730,"line_start":468,"line_end":468,"column_start":1,"column_end":69}},{"value":"/ minimize the gaps left behind by overly short lines.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91731,"byte_end":91787,"line_start":469,"line_end":469,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91788,"byte_end":91791,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ While both algorithms run in linear time, the first-fit algorithm","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91792,"byte_end":91861,"line_start":471,"line_end":471,"column_start":1,"column_end":70}},{"value":"/ is about 4 times faster than the optimal-fit algorithm.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":91862,"byte_end":91921,"line_start":472,"line_end":472,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":98121,"byte_end":98135,"line_start":630,"line_end":630,"column_start":8,"column_end":22},"name":"wrap_first_fit","qualname":"::core::wrap_first_fit","value":"pub fn wrap_first_fit<T: Fragment, F: Fn(usize) -> usize>(&[T], F)\n-> Vec<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Wrap abstract fragments into lines with a first-fit algorithm.","sig":null,"attributes":[{"value":"/ Wrap abstract fragments into lines with a first-fit algorithm.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92423,"byte_end":92489,"line_start":488,"line_end":488,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92490,"byte_end":92493,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ The `line_widths` map line numbers (starting from 0) to a target","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92494,"byte_end":92562,"line_start":490,"line_end":490,"column_start":1,"column_end":69}},{"value":"/ line width. This can be used to implement hanging indentation.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92563,"byte_end":92629,"line_start":491,"line_end":491,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92630,"byte_end":92633,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ The fragments must already have been split into the desired","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92634,"byte_end":92697,"line_start":493,"line_end":493,"column_start":1,"column_end":64}},{"value":"/ widths, this function will not (and cannot) attempt to split them","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92698,"byte_end":92767,"line_start":494,"line_end":494,"column_start":1,"column_end":70}},{"value":"/ further when arranging them into lines.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92768,"byte_end":92811,"line_start":495,"line_end":495,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92812,"byte_end":92815,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ # First-Fit Algorithm","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92816,"byte_end":92841,"line_start":497,"line_end":497,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92842,"byte_end":92845,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ This implements a simple “greedy” algorithm: accumulate fragments","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92846,"byte_end":92919,"line_start":499,"line_end":499,"column_start":1,"column_end":70}},{"value":"/ one by one and when a fragment no longer fits, start a new line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92920,"byte_end":92988,"line_start":500,"line_end":500,"column_start":1,"column_end":69}},{"value":"/ There is no look-ahead, we simply take first fit of the fragments","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":92989,"byte_end":93058,"line_start":501,"line_end":501,"column_start":1,"column_end":70}},{"value":"/ we find.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93059,"byte_end":93071,"line_start":502,"line_end":502,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93072,"byte_end":93075,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ While fast and predictable, this algorithm can produce poor line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93076,"byte_end":93144,"line_start":504,"line_end":504,"column_start":1,"column_end":69}},{"value":"/ breaks when a long fragment is moved to a new line, leaving behind","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93145,"byte_end":93215,"line_start":505,"line_end":505,"column_start":1,"column_end":71}},{"value":"/ a large gap:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93216,"byte_end":93232,"line_start":506,"line_end":506,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93233,"byte_end":93236,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93237,"byte_end":93244,"line_start":508,"line_end":508,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::{find_words, wrap_first_fit, Word};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93245,"byte_end":93304,"line_start":509,"line_end":509,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93305,"byte_end":93308,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ // Helper to convert wrapped lines to a Vec<String>.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93309,"byte_end":93365,"line_start":511,"line_end":511,"column_start":1,"column_end":57}},{"value":"/ fn lines_to_strings(lines: Vec<&[Word<'_>]>) -> Vec<String> {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93366,"byte_end":93431,"line_start":512,"line_end":512,"column_start":1,"column_end":66}},{"value":"/     lines.iter().map(|line| {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93432,"byte_end":93465,"line_start":513,"line_end":513,"column_start":1,"column_end":34}},{"value":"/         line.iter().map(|word| &**word).collect::<Vec<_>>().join(\" \")","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93466,"byte_end":93539,"line_start":514,"line_end":514,"column_start":1,"column_end":74}},{"value":"/     }).collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93540,"byte_end":93570,"line_start":515,"line_end":515,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93571,"byte_end":93576,"line_start":516,"line_end":516,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93577,"byte_end":93580,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ let text = \"These few words will unfortunately not wrap nicely.\";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93581,"byte_end":93650,"line_start":518,"line_end":518,"column_start":1,"column_end":70}},{"value":"/ let words = find_words(text).collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93651,"byte_end":93704,"line_start":519,"line_end":519,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(lines_to_strings(wrap_first_fit(&words, |_| 15)),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93705,"byte_end":93769,"line_start":520,"line_end":520,"column_start":1,"column_end":65}},{"value":"/            vec![\"These few words\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93770,"byte_end":93808,"line_start":521,"line_end":521,"column_start":1,"column_end":39}},{"value":"/                 \"will\",  // <-- short line","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93809,"byte_end":93855,"line_start":522,"line_end":522,"column_start":1,"column_end":47}},{"value":"/                 \"unfortunately\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93856,"byte_end":93892,"line_start":523,"line_end":523,"column_start":1,"column_end":37}},{"value":"/                 \"not wrap\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93893,"byte_end":93924,"line_start":524,"line_end":524,"column_start":1,"column_end":32}},{"value":"/                 \"nicely.\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93925,"byte_end":93957,"line_start":525,"line_end":525,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93958,"byte_end":93961,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ // We can avoid the short line if we look ahead:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":93962,"byte_end":94014,"line_start":527,"line_end":527,"column_start":1,"column_end":53}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94015,"byte_end":94044,"line_start":528,"line_end":528,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(lines_to_strings(textwrap::core::wrap_optimal_fit(&words, |_| 15)),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94045,"byte_end":94127,"line_start":529,"line_end":529,"column_start":1,"column_end":83}},{"value":"/            vec![\"These few\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94128,"byte_end":94160,"line_start":530,"line_end":530,"column_start":1,"column_end":33}},{"value":"/                 \"words will\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94161,"byte_end":94194,"line_start":531,"line_end":531,"column_start":1,"column_end":34}},{"value":"/                 \"unfortunately\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94195,"byte_end":94231,"line_start":532,"line_end":532,"column_start":1,"column_end":37}},{"value":"/                 \"not wrap\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94232,"byte_end":94263,"line_start":533,"line_end":533,"column_start":1,"column_end":32}},{"value":"/                 \"nicely.\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94264,"byte_end":94296,"line_start":534,"line_end":534,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94297,"byte_end":94304,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94305,"byte_end":94308,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ The [`wrap_optimal_fit`] function was used above to get better","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94309,"byte_end":94375,"line_start":537,"line_end":537,"column_start":1,"column_end":67}},{"value":"/ line breaks. It uses an advanced algorithm which tries to avoid","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94376,"byte_end":94443,"line_start":538,"line_end":538,"column_start":1,"column_end":68}},{"value":"/ short lines. This function is about 4 times faster than","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94444,"byte_end":94503,"line_start":539,"line_end":539,"column_start":1,"column_end":60}},{"value":"/ [`wrap_optimal_fit`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94504,"byte_end":94529,"line_start":540,"line_end":540,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94530,"byte_end":94533,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94534,"byte_end":94548,"line_start":542,"line_end":542,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94549,"byte_end":94552,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ Imagine you're building a house site and you have a number of","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94553,"byte_end":94618,"line_start":544,"line_end":544,"column_start":1,"column_end":66}},{"value":"/ tasks you need to execute. Things like pour foundation, complete","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94619,"byte_end":94687,"line_start":545,"line_end":545,"column_start":1,"column_end":69}},{"value":"/ framing, install plumbing, electric cabling, install insulation.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94688,"byte_end":94756,"line_start":546,"line_end":546,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94757,"byte_end":94760,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ The construction workers can only work during daytime, so they","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94761,"byte_end":94827,"line_start":548,"line_end":548,"column_start":1,"column_end":67}},{"value":"/ need to pack up everything at night. Because they need to secure","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94828,"byte_end":94896,"line_start":549,"line_end":549,"column_start":1,"column_end":69}},{"value":"/ their tools and move machines back to the garage, this process","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94897,"byte_end":94963,"line_start":550,"line_end":550,"column_start":1,"column_end":67}},{"value":"/ takes much more time than the time it would take them to simply","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":94964,"byte_end":95031,"line_start":551,"line_end":551,"column_start":1,"column_end":68}},{"value":"/ switch to another task.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95032,"byte_end":95059,"line_start":552,"line_end":552,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95060,"byte_end":95063,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ You would like to make a list of tasks to execute every day based","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95064,"byte_end":95133,"line_start":554,"line_end":554,"column_start":1,"column_end":70}},{"value":"/ on your estimates. You can model this with a program like this:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95134,"byte_end":95201,"line_start":555,"line_end":555,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95202,"byte_end":95205,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95206,"byte_end":95213,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::{wrap_first_fit, Fragment};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95214,"byte_end":95265,"line_start":558,"line_end":558,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95266,"byte_end":95269,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95270,"byte_end":95290,"line_start":560,"line_end":560,"column_start":1,"column_end":21}},{"value":"/ struct Task<'a> {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95291,"byte_end":95312,"line_start":561,"line_end":561,"column_start":1,"column_end":22}},{"value":"/     name: &'a str,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95313,"byte_end":95335,"line_start":562,"line_end":562,"column_start":1,"column_end":23}},{"value":"/     hours: usize,   // Time needed to complete task.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95336,"byte_end":95392,"line_start":563,"line_end":563,"column_start":1,"column_end":57}},{"value":"/     sweep: usize,   // Time needed for a quick sweep after task during the day.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95393,"byte_end":95476,"line_start":564,"line_end":564,"column_start":1,"column_end":84}},{"value":"/     cleanup: usize, // Time needed for full cleanup if day ends with this task.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95477,"byte_end":95560,"line_start":565,"line_end":565,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95561,"byte_end":95566,"line_start":566,"line_end":566,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95567,"byte_end":95570,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ impl Fragment for Task<'_> {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95571,"byte_end":95603,"line_start":568,"line_end":568,"column_start":1,"column_end":33}},{"value":"/     fn width(&self) -> usize { self.hours }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95604,"byte_end":95651,"line_start":569,"line_end":569,"column_start":1,"column_end":48}},{"value":"/     fn whitespace_width(&self) -> usize { self.sweep }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95652,"byte_end":95710,"line_start":570,"line_end":570,"column_start":1,"column_end":59}},{"value":"/     fn penalty_width(&self) -> usize { self.cleanup }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95711,"byte_end":95768,"line_start":571,"line_end":571,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95769,"byte_end":95774,"line_start":572,"line_end":572,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95775,"byte_end":95778,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ // The morning tasks","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95779,"byte_end":95803,"line_start":574,"line_end":574,"column_start":1,"column_end":25}},{"value":"/ let tasks = vec![","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95804,"byte_end":95825,"line_start":575,"line_end":575,"column_start":1,"column_end":22}},{"value":"/     Task { name: \"Foundation\",  hours: 4, sweep: 2, cleanup: 3 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95826,"byte_end":95895,"line_start":576,"line_end":576,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Framing\",     hours: 3, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95896,"byte_end":95965,"line_start":577,"line_end":577,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Plumbing\",    hours: 2, sweep: 2, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":95966,"byte_end":96035,"line_start":578,"line_end":578,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Electrical\",  hours: 2, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96036,"byte_end":96105,"line_start":579,"line_end":579,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Insulation\",  hours: 2, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96106,"byte_end":96175,"line_start":580,"line_end":580,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Drywall\",     hours: 3, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96176,"byte_end":96245,"line_start":581,"line_end":581,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Floors\",      hours: 3, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96246,"byte_end":96315,"line_start":582,"line_end":582,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Countertops\", hours: 1, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96316,"byte_end":96385,"line_start":583,"line_end":583,"column_start":1,"column_end":70}},{"value":"/     Task { name: \"Bathrooms\",   hours: 2, sweep: 1, cleanup: 2 },","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96386,"byte_end":96455,"line_start":584,"line_end":584,"column_start":1,"column_end":70}},{"value":"/ ];","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96456,"byte_end":96462,"line_start":585,"line_end":585,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96463,"byte_end":96466,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ // Fill tasks into days, taking `day_length` into account. The","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96467,"byte_end":96533,"line_start":587,"line_end":587,"column_start":1,"column_end":67}},{"value":"/ // output shows the hours worked per day along with the names of","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96534,"byte_end":96602,"line_start":588,"line_end":588,"column_start":1,"column_end":69}},{"value":"/ // the tasks for that day.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96603,"byte_end":96633,"line_start":589,"line_end":589,"column_start":1,"column_end":31}},{"value":"/ fn assign_days<'a>(tasks: &[Task<'a>], day_length: usize) -> Vec<(usize, Vec<&'a str>)> {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96634,"byte_end":96727,"line_start":590,"line_end":590,"column_start":1,"column_end":94}},{"value":"/     let mut days = Vec::new();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96728,"byte_end":96762,"line_start":591,"line_end":591,"column_start":1,"column_end":35}},{"value":"/     // Assign tasks to days. The assignment is a vector of slices,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96763,"byte_end":96833,"line_start":592,"line_end":592,"column_start":1,"column_end":71}},{"value":"/     // with a slice per day.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96834,"byte_end":96866,"line_start":593,"line_end":593,"column_start":1,"column_end":33}},{"value":"/     let assigned_days: Vec<&[Task<'a>]> = wrap_first_fit(&tasks, |i| day_length);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96867,"byte_end":96952,"line_start":594,"line_end":594,"column_start":1,"column_end":86}},{"value":"/     for day in assigned_days.iter() {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96953,"byte_end":96994,"line_start":595,"line_end":595,"column_start":1,"column_end":42}},{"value":"/         let last = day.last().unwrap();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":96995,"byte_end":97038,"line_start":596,"line_end":596,"column_start":1,"column_end":44}},{"value":"/         let work_hours: usize = day.iter().map(|t| t.hours + t.sweep).sum();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97039,"byte_end":97119,"line_start":597,"line_end":597,"column_start":1,"column_end":81}},{"value":"/         let names = day.iter().map(|t| t.name).collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97120,"byte_end":97191,"line_start":598,"line_end":598,"column_start":1,"column_end":72}},{"value":"/         days.push((work_hours - last.sweep + last.cleanup, names));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97192,"byte_end":97263,"line_start":599,"line_end":599,"column_start":1,"column_end":72}},{"value":"/     }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97264,"byte_end":97273,"line_start":600,"line_end":600,"column_start":1,"column_end":10}},{"value":"/     days","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97274,"byte_end":97286,"line_start":601,"line_end":601,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97287,"byte_end":97292,"line_start":602,"line_end":602,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97293,"byte_end":97296,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ // With a single crew working 8 hours a day:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97297,"byte_end":97345,"line_start":604,"line_end":604,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97346,"byte_end":97361,"line_start":605,"line_end":605,"column_start":1,"column_end":16}},{"value":"/     assign_days(&tasks, 8),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97362,"byte_end":97393,"line_start":606,"line_end":606,"column_start":1,"column_end":32}},{"value":"/     [","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97394,"byte_end":97403,"line_start":607,"line_end":607,"column_start":1,"column_end":10}},{"value":"/         (7, vec![\"Foundation\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97404,"byte_end":97440,"line_start":608,"line_end":608,"column_start":1,"column_end":37}},{"value":"/         (8, vec![\"Framing\", \"Plumbing\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97441,"byte_end":97486,"line_start":609,"line_end":609,"column_start":1,"column_end":46}},{"value":"/         (7, vec![\"Electrical\", \"Insulation\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97487,"byte_end":97537,"line_start":610,"line_end":610,"column_start":1,"column_end":51}},{"value":"/         (5, vec![\"Drywall\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97538,"byte_end":97571,"line_start":611,"line_end":611,"column_start":1,"column_end":34}},{"value":"/         (7, vec![\"Floors\", \"Countertops\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97572,"byte_end":97619,"line_start":612,"line_end":612,"column_start":1,"column_end":48}},{"value":"/         (4, vec![\"Bathrooms\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97620,"byte_end":97655,"line_start":613,"line_end":613,"column_start":1,"column_end":36}},{"value":"/     ]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97656,"byte_end":97665,"line_start":614,"line_end":614,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97666,"byte_end":97672,"line_start":615,"line_end":615,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97673,"byte_end":97676,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ // With two crews working in shifts, 16 hours a day:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97677,"byte_end":97733,"line_start":617,"line_end":617,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97734,"byte_end":97749,"line_start":618,"line_end":618,"column_start":1,"column_end":16}},{"value":"/     assign_days(&tasks, 16),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97750,"byte_end":97782,"line_start":619,"line_end":619,"column_start":1,"column_end":33}},{"value":"/     [","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97783,"byte_end":97792,"line_start":620,"line_end":620,"column_start":1,"column_end":10}},{"value":"/         (14, vec![\"Foundation\", \"Framing\", \"Plumbing\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97793,"byte_end":97853,"line_start":621,"line_end":621,"column_start":1,"column_end":61}},{"value":"/         (15, vec![\"Electrical\", \"Insulation\", \"Drywall\", \"Floors\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97854,"byte_end":97926,"line_start":622,"line_end":622,"column_start":1,"column_end":73}},{"value":"/         (6, vec![\"Countertops\", \"Bathrooms\"]),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97927,"byte_end":97977,"line_start":623,"line_end":623,"column_start":1,"column_end":51}},{"value":"/     ]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97978,"byte_end":97987,"line_start":624,"line_end":624,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97988,"byte_end":97994,"line_start":625,"line_end":625,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":97995,"byte_end":98002,"line_start":626,"line_end":626,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":98003,"byte_end":98006,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ Apologies to anyone who actually knows how to build a house and","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":98007,"byte_end":98074,"line_start":628,"line_end":628,"column_start":1,"column_end":68}},{"value":"/ knows how long each step takes :-)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":98075,"byte_end":98113,"line_start":629,"line_end":629,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5857,"byte_end":5864,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"Options","qualname":"::Options","value":"Options { width, initial_indent, subsequent_indent, break_words, wrap_algorithm, splitter }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" Holds settings for wrapping and filling text.\n","sig":null,"attributes":[{"value":"/ Holds settings for wrapping and filling text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5772,"byte_end":5821,"line_start":185,"line_end":185,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5978,"byte_end":5983,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"name":"width","qualname":"::Options::width","value":"usize","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" The width in columns at which the text will be wrapped.\n","sig":null,"attributes":[{"value":"/ The width in columns at which the text will be wrapped.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5910,"byte_end":5969,"line_start":188,"line_end":188,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6107,"byte_end":6121,"line_start":192,"line_end":192,"column_start":9,"column_end":23},"name":"initial_indent","qualname":"::Options::initial_indent","value":"&'a str","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Indentation used for the first line of output. See the\n [`Options::initial_indent`] method.\n","sig":null,"attributes":[{"value":"/ Indentation used for the first line of output. See the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5996,"byte_end":6054,"line_start":190,"line_end":190,"column_start":5,"column_end":63}},{"value":"/ [`Options::initial_indent`] method.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6059,"byte_end":6098,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6252,"byte_end":6269,"line_start":195,"line_end":195,"column_start":9,"column_end":26},"name":"subsequent_indent","qualname":"::Options::subsequent_indent","value":"&'a str","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Indentation used for subsequent lines of output. See the\n [`Options::subsequent_indent`] method.\n","sig":null,"attributes":[{"value":"/ Indentation used for subsequent lines of output. See the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6136,"byte_end":6196,"line_start":193,"line_end":193,"column_start":5,"column_end":65}},{"value":"/ [`Options::subsequent_indent`] method.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6201,"byte_end":6243,"line_start":194,"line_end":194,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6478,"byte_end":6489,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"name":"break_words","qualname":"::Options::break_words","value":"bool","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Allow long words to be broken if they cannot fit on a line.\n When set to `false`, some lines may be longer than\n `self.width`. See the [`Options::break_words`] method.\n","sig":null,"attributes":[{"value":"/ Allow long words to be broken if they cannot fit on a line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6284,"byte_end":6347,"line_start":196,"line_end":196,"column_start":5,"column_end":68}},{"value":"/ When set to `false`, some lines may be longer than","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6352,"byte_end":6406,"line_start":197,"line_end":197,"column_start":5,"column_end":59}},{"value":"/ `self.width`. See the [`Options::break_words`] method.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6411,"byte_end":6469,"line_start":198,"line_end":198,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6588,"byte_end":6602,"line_start":202,"line_end":202,"column_start":9,"column_end":23},"name":"wrap_algorithm","qualname":"::Options::wrap_algorithm","value":"core::WrapAlgorithm","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Wraping algorithm to use, see [`core::WrapAlgorithm`] for\n details.\n","sig":null,"attributes":[{"value":"/ Wraping algorithm to use, see [`core::WrapAlgorithm`] for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6501,"byte_end":6562,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6567,"byte_end":6579,"line_start":201,"line_end":201,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6872,"byte_end":6880,"line_start":207,"line_end":207,"column_start":9,"column_end":17},"name":"splitter","qualname":"::Options::splitter","value":"S","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" The method for splitting words. This can be used to prohibit\n splitting words on hyphens, or it can be used to implement\n language-aware machine hyphenation. Please see the\n [`WordSplitter`] trait for details.\n","sig":null,"attributes":[{"value":"/ The method for splitting words. This can be used to prohibit","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6629,"byte_end":6693,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/ splitting words on hyphens, or it can be used to implement","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6698,"byte_end":6760,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/ language-aware machine hyphenation. Please see the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6765,"byte_end":6819,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/ [`WordSplitter`] trait for details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6824,"byte_end":6863,"line_start":206,"line_end":206,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":11183,"byte_end":11186,"line_start":311,"line_end":311,"column_start":18,"column_end":21},"name":"new","qualname":"<Options>::new","value":"pub const fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Options`] with the specified width and static\n dispatch using the [`HyphenSplitter`]. Equivalent to","sig":null,"attributes":[{"value":"/ Creates a new [`Options`] with the specified width and static","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7547,"byte_end":7612,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ dispatch using the [`HyphenSplitter`]. Equivalent to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7617,"byte_end":7673,"line_start":232,"line_end":232,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7678,"byte_end":7681,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7686,"byte_end":7693,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use textwrap::{Options, HyphenSplitter, WordSplitter};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7698,"byte_end":7758,"line_start":235,"line_end":235,"column_start":5,"column_end":65}},{"value":"/ # let width = 80;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7763,"byte_end":7784,"line_start":236,"line_end":236,"column_start":5,"column_end":26}},{"value":"/ # let actual = Options::new(width);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7789,"byte_end":7828,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/ # let expected =","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7833,"byte_end":7853,"line_start":238,"line_end":238,"column_start":5,"column_end":25}},{"value":"/ Options {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7858,"byte_end":7871,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/     width: width,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7876,"byte_end":7897,"line_start":240,"line_end":240,"column_start":5,"column_end":26}},{"value":"/     initial_indent: \"\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7902,"byte_end":7929,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7934,"byte_end":7964,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/     break_words: true,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7969,"byte_end":7995,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/     #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8000,"byte_end":8033,"line_start":244,"line_end":244,"column_start":5,"column_end":38}},{"value":"/     wrap_algorithm: textwrap::core::WrapAlgorithm::OptimalFit,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8038,"byte_end":8104,"line_start":245,"line_end":245,"column_start":5,"column_end":71}},{"value":"/     #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8109,"byte_end":8147,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/     wrap_algorithm: textwrap::core::WrapAlgorithm::FirstFit,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8152,"byte_end":8216,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/     splitter: HyphenSplitter,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8221,"byte_end":8254,"line_start":248,"line_end":248,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8259,"byte_end":8264,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8269,"byte_end":8276,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ # assert_eq!(actual.width, expected.width);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8281,"byte_end":8328,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/ # assert_eq!(actual.initial_indent, expected.initial_indent);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8333,"byte_end":8398,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ # assert_eq!(actual.subsequent_indent, expected.subsequent_indent);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8403,"byte_end":8474,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ # assert_eq!(actual.break_words, expected.break_words);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8479,"byte_end":8538,"line_start":254,"line_end":254,"column_start":5,"column_end":64}},{"value":"/ # assert_eq!(actual.wrap_algorithm, expected.wrap_algorithm);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8543,"byte_end":8608,"line_start":255,"line_end":255,"column_start":5,"column_end":70}},{"value":"/ # let expected_coerced: Options<'static, HyphenSplitter> = expected;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8613,"byte_end":8685,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8690,"byte_end":8697,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8702,"byte_end":8705,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that the default wrap algorithm changes based on the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8710,"byte_end":8771,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/ `smawk` Cargo feature. The best available algorithm is used by","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8776,"byte_end":8842,"line_start":260,"line_end":260,"column_start":5,"column_end":71}},{"value":"/ default.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8847,"byte_end":8859,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8864,"byte_end":8867,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Static dispatch mean here, that the splitter is stored as-is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8872,"byte_end":8936,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/ and the type is known at compile-time. Thus the returned value","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":8941,"byte_end":9007,"line_start":264,"line_end":264,"column_start":5,"column_end":71}},{"value":"/ is actually a `Options<HyphenSplitter>`.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9012,"byte_end":9056,"line_start":265,"line_end":265,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9061,"byte_end":9064,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Dynamic dispatch on the other hand, mean that the splitter is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9069,"byte_end":9134,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ stored as a trait object for instance in a `Box<dyn","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9139,"byte_end":9194,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/ WordSplitter>`. This way the splitter's inner type can be","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9199,"byte_end":9260,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ changed without changing the type of this struct, which then","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9265,"byte_end":9329,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/ would be just `Options` as a short cut for `Options<Box<dyn","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9334,"byte_end":9397,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/ WordSplitter>>`.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9402,"byte_end":9422,"line_start":272,"line_end":272,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9427,"byte_end":9430,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The value and type of the splitter can be choose from the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9435,"byte_end":9496,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ start using the [`Options::with_splitter`] constructor or","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9501,"byte_end":9562,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/ changed afterwards using the [`Options::splitter`] method.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9567,"byte_end":9629,"line_start":276,"line_end":276,"column_start":5,"column_end":67}},{"value":"/ Whether static or dynamic dispatch is used, depends on whether","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9634,"byte_end":9700,"line_start":277,"line_end":277,"column_start":5,"column_end":71}},{"value":"/ these functions are given a boxed [`WordSplitter`] or not.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9705,"byte_end":9767,"line_start":278,"line_end":278,"column_start":5,"column_end":67}},{"value":"/ Take for example:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9772,"byte_end":9793,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9798,"byte_end":9801,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9806,"byte_end":9813,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{HyphenSplitter, NoHyphenation, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9818,"byte_end":9877,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/ # use textwrap::{WordSplitter};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9882,"byte_end":9917,"line_start":283,"line_end":283,"column_start":5,"column_end":40}},{"value":"/ # let width = 80;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9922,"byte_end":9943,"line_start":284,"line_end":284,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9948,"byte_end":9951,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ // uses HyphenSplitter with static dispatch","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":9956,"byte_end":10003,"line_start":286,"line_end":286,"column_start":5,"column_end":52}},{"value":"/ // the actual type: Options<HyphenSplitter>","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10008,"byte_end":10055,"line_start":287,"line_end":287,"column_start":5,"column_end":52}},{"value":"/ let opt = Options::new(width);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10060,"byte_end":10094,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/ # let opt_coerce: Options<HyphenSplitter> = opt;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10099,"byte_end":10151,"line_start":289,"line_end":289,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10156,"byte_end":10159,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ // uses NoHyphenation with static dispatch","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10164,"byte_end":10210,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/ // the actual type: Options<NoHyphenation>","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10215,"byte_end":10261,"line_start":292,"line_end":292,"column_start":5,"column_end":51}},{"value":"/ let opt = Options::new(width).splitter(NoHyphenation);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10266,"byte_end":10324,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ # let opt_coerce: Options<NoHyphenation> = opt;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10329,"byte_end":10380,"line_start":294,"line_end":294,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10385,"byte_end":10388,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // uses HyphenSplitter with dynamic dispatch","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10393,"byte_end":10441,"line_start":296,"line_end":296,"column_start":5,"column_end":53}},{"value":"/ // the actual type: Options<Box<dyn WordSplitter>>","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10446,"byte_end":10500,"line_start":297,"line_end":297,"column_start":5,"column_end":59}},{"value":"/ let opt: Options = Options::new(width).splitter(Box::new(HyphenSplitter));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10505,"byte_end":10583,"line_start":298,"line_end":298,"column_start":5,"column_end":83}},{"value":"/ # let opt_coerce: Options<Box<dyn WordSplitter>> = opt;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10588,"byte_end":10647,"line_start":299,"line_end":299,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10652,"byte_end":10655,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ // uses NoHyphenation with dynamic dispatch","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10660,"byte_end":10707,"line_start":301,"line_end":301,"column_start":5,"column_end":52}},{"value":"/ // the actual type: Options<Box<dyn WordSplitter>>","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10712,"byte_end":10766,"line_start":302,"line_end":302,"column_start":5,"column_end":59}},{"value":"/ let opt: Options = Options::new(width).splitter(Box::new(NoHyphenation));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10771,"byte_end":10848,"line_start":303,"line_end":303,"column_start":5,"column_end":82}},{"value":"/ # let opt_coerce: Options<Box<dyn WordSplitter>> = opt;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10853,"byte_end":10912,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10917,"byte_end":10924,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10929,"byte_end":10932,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Notice that the last two variables have the same type, despite","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":10937,"byte_end":11003,"line_start":307,"line_end":307,"column_start":5,"column_end":71}},{"value":"/ the different `WordSplitter` in use. Thus dynamic dispatch","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":11008,"byte_end":11070,"line_start":308,"line_end":308,"column_start":5,"column_end":67}},{"value":"/ allows to change the splitter at run-time without changing the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":11075,"byte_end":11141,"line_start":309,"line_end":309,"column_start":5,"column_end":71}},{"value":"/ variables type.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":11146,"byte_end":11165,"line_start":310,"line_end":310,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15096,"byte_end":15109,"line_start":406,"line_end":406,"column_start":18,"column_end":31},"name":"with_splitter","qualname":"<Options>::with_splitter","value":"pub const fn with_splitter(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Options`] with the specified width and\n splitter. Equivalent to","sig":null,"attributes":[{"value":"/ Creates a new [`Options`] with the specified width and","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12029,"byte_end":12087,"line_start":339,"line_end":339,"column_start":5,"column_end":63}},{"value":"/ splitter. Equivalent to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12092,"byte_end":12119,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12124,"byte_end":12127,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12132,"byte_end":12139,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ # use textwrap::{Options, NoHyphenation, HyphenSplitter};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12144,"byte_end":12205,"line_start":343,"line_end":343,"column_start":5,"column_end":66}},{"value":"/ # const splitter: NoHyphenation = NoHyphenation;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12210,"byte_end":12262,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/ # const width: usize = 80;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12267,"byte_end":12297,"line_start":345,"line_end":345,"column_start":5,"column_end":35}},{"value":"/ # const actual: Options<'static, NoHyphenation> = Options::with_splitter(width, splitter);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12302,"byte_end":12396,"line_start":346,"line_end":346,"column_start":5,"column_end":99}},{"value":"/ # let expected =","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12401,"byte_end":12421,"line_start":347,"line_end":347,"column_start":5,"column_end":25}},{"value":"/ Options {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12426,"byte_end":12439,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/     width: width,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12444,"byte_end":12465,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     initial_indent: \"\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12470,"byte_end":12497,"line_start":350,"line_end":350,"column_start":5,"column_end":32}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12502,"byte_end":12532,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/     break_words: true,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12537,"byte_end":12563,"line_start":352,"line_end":352,"column_start":5,"column_end":31}},{"value":"/     #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12568,"byte_end":12601,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/     wrap_algorithm: textwrap::core::WrapAlgorithm::OptimalFit,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12606,"byte_end":12672,"line_start":354,"line_end":354,"column_start":5,"column_end":71}},{"value":"/     #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12677,"byte_end":12715,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"/     wrap_algorithm: textwrap::core::WrapAlgorithm::FirstFit,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12720,"byte_end":12784,"line_start":356,"line_end":356,"column_start":5,"column_end":69}},{"value":"/     splitter: splitter,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12789,"byte_end":12816,"line_start":357,"line_end":357,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12821,"byte_end":12826,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12831,"byte_end":12838,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # assert_eq!(actual.width, expected.width);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12843,"byte_end":12890,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/ # assert_eq!(actual.initial_indent, expected.initial_indent);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12895,"byte_end":12960,"line_start":361,"line_end":361,"column_start":5,"column_end":70}},{"value":"/ # assert_eq!(actual.subsequent_indent, expected.subsequent_indent);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12965,"byte_end":13036,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/ # assert_eq!(actual.break_words, expected.break_words);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13041,"byte_end":13100,"line_start":363,"line_end":363,"column_start":5,"column_end":64}},{"value":"/ # assert_eq!(actual.wrap_algorithm, expected.wrap_algorithm);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13105,"byte_end":13170,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ # let expected_coerced: Options<'static, NoHyphenation> = expected;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13175,"byte_end":13246,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13251,"byte_end":13258,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13263,"byte_end":13266,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This constructor allows to specify the splitter to be used. It","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13271,"byte_end":13337,"line_start":368,"line_end":368,"column_start":5,"column_end":71}},{"value":"/ is like a short-cut for `Options::new(w).splitter(s)`, but","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13342,"byte_end":13404,"line_start":369,"line_end":369,"column_start":5,"column_end":67}},{"value":"/ this function is a `const fn`. The given splitter may be in a","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13409,"byte_end":13474,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ [`Box`], which then can be coerced into a trait object for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13479,"byte_end":13541,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/ dynamic dispatch:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13546,"byte_end":13567,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13572,"byte_end":13575,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13580,"byte_end":13587,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{HyphenSplitter, NoHyphenation, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13592,"byte_end":13651,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/ # use textwrap::{WordSplitter};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13656,"byte_end":13691,"line_start":376,"line_end":376,"column_start":5,"column_end":40}},{"value":"/ # const width: usize = 80;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13696,"byte_end":13726,"line_start":377,"line_end":377,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13731,"byte_end":13734,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ // This opt contains a boxed trait object as splitter.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13739,"byte_end":13797,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/ // The type annotation is important, otherwise it will be not a trait object","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13802,"byte_end":13882,"line_start":380,"line_end":380,"column_start":5,"column_end":85}},{"value":"/ let mut opt: Options = Options::with_splitter(width, Box::new(NoHyphenation));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13887,"byte_end":13969,"line_start":381,"line_end":381,"column_start":5,"column_end":87}},{"value":"/ // Its type is actually: `Options<Box<dyn WordSplitter>>`:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":13974,"byte_end":14036,"line_start":382,"line_end":382,"column_start":5,"column_end":67}},{"value":"/ let opt_coerced: Options<Box<dyn WordSplitter>> = opt;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14041,"byte_end":14099,"line_start":383,"line_end":383,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14104,"byte_end":14107,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ // Thus, it can be overridden with a different splitter.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14112,"byte_end":14172,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ opt = Options::with_splitter(width, Box::new(HyphenSplitter));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14177,"byte_end":14243,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/ // Now, containing a `HyphenSplitter` instead.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14248,"byte_end":14298,"line_start":387,"line_end":387,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14303,"byte_end":14310,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14315,"byte_end":14318,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Since the splitter is given by value, which determines the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14323,"byte_end":14385,"line_start":390,"line_end":390,"column_start":5,"column_end":67}},{"value":"/ generic type parameter, it can be used to produce both an","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14390,"byte_end":14451,"line_start":391,"line_end":391,"column_start":5,"column_end":66}},{"value":"/ [`Options`] with static and dynamic dispatch, respectively.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14456,"byte_end":14519,"line_start":392,"line_end":392,"column_start":5,"column_end":68}},{"value":"/ While dynamic dispatch allows to change the type of the inner","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14524,"byte_end":14589,"line_start":393,"line_end":393,"column_start":5,"column_end":70}},{"value":"/ splitter at run time as seen above, static dispatch especially","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14594,"byte_end":14660,"line_start":394,"line_end":394,"column_start":5,"column_end":71}},{"value":"/ can store the splitter directly, without the need for a box.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14665,"byte_end":14729,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ This in turn allows it to be used in constant and static","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14734,"byte_end":14794,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ context:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14799,"byte_end":14811,"line_start":397,"line_end":397,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14816,"byte_end":14819,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14824,"byte_end":14831,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{HyphenSplitter, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14836,"byte_end":14880,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/ # const width: usize = 80;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14885,"byte_end":14915,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14920,"byte_end":14923,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ const FOO: Options<HyphenSplitter> = Options::with_splitter(width, HyphenSplitter);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":14928,"byte_end":15015,"line_start":403,"line_end":403,"column_start":5,"column_end":92}},{"value":"/ static BAR: Options<HyphenSplitter> = FOO;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15020,"byte_end":15066,"line_start":404,"line_end":404,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15071,"byte_end":15078,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16235,"byte_end":16249,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"initial_indent","qualname":"<Options>::initial_indent","value":"pub fn initial_indent(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.initial_indent`]. The initial indentation is\n used on the very first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.initial_indent`]. The initial indentation is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15581,"byte_end":15643,"line_start":422,"line_end":422,"column_start":5,"column_end":67}},{"value":"/ used on the very first line of output.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15648,"byte_end":15690,"line_start":423,"line_end":423,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15695,"byte_end":15698,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15703,"byte_end":15717,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15722,"byte_end":15725,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Classic paragraph indentation can be achieved by specifying an","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15730,"byte_end":15796,"line_start":427,"line_end":427,"column_start":5,"column_end":71}},{"value":"/ initial indentation and wrapping each paragraph by itself:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15801,"byte_end":15863,"line_start":428,"line_end":428,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15868,"byte_end":15871,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15876,"byte_end":15883,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{Options, wrap};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15888,"byte_end":15922,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15927,"byte_end":15930,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(16).initial_indent(\"    \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15935,"byte_end":15993,"line_start":433,"line_end":433,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15998,"byte_end":16056,"line_start":434,"line_end":434,"column_start":5,"column_end":63}},{"value":"/            vec![\"    This is a\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16061,"byte_end":16097,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/                 \"little example.\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16102,"byte_end":16142,"line_start":436,"line_end":436,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16147,"byte_end":16154,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16159,"byte_end":16162,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ [`self.initial_indent`]: #structfield.initial_indent","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16167,"byte_end":16223,"line_start":439,"line_end":439,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17442,"byte_end":17459,"line_start":476,"line_end":476,"column_start":12,"column_end":29},"name":"subsequent_indent","qualname":"<Options>::subsequent_indent","value":"pub fn subsequent_indent(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.subsequent_indent`]. The subsequent indentation\n is used on lines following the first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.subsequent_indent`]. The subsequent indentation","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16377,"byte_end":16442,"line_start":447,"line_end":447,"column_start":5,"column_end":70}},{"value":"/ is used on lines following the first line of output.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16447,"byte_end":16503,"line_start":448,"line_end":448,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16508,"byte_end":16511,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16516,"byte_end":16530,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16535,"byte_end":16538,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Combining initial and subsequent indentation lets you format a","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16543,"byte_end":16609,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/ single paragraph as a bullet list:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16614,"byte_end":16652,"line_start":453,"line_end":453,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16657,"byte_end":16660,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16665,"byte_end":16672,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{Options, wrap};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16677,"byte_end":16711,"line_start":456,"line_end":456,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16716,"byte_end":16719,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(12)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16724,"byte_end":16758,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/     .initial_indent(\"* \")","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16763,"byte_end":16792,"line_start":459,"line_end":459,"column_start":5,"column_end":34}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16797,"byte_end":16830,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16835,"byte_end":16864,"line_start":461,"line_end":461,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16869,"byte_end":16927,"line_start":462,"line_end":462,"column_start":5,"column_end":63}},{"value":"/            vec![\"* This is\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16932,"byte_end":16964,"line_start":463,"line_end":463,"column_start":5,"column_end":37}},{"value":"/                 \"  a little\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":16969,"byte_end":17002,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/                 \"  example.\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17007,"byte_end":17042,"line_start":465,"line_end":465,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17047,"byte_end":17050,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ // Without the `smawk` feature, the wrapping is a little different:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17055,"byte_end":17126,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/ #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17131,"byte_end":17165,"line_start":468,"line_end":468,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17170,"byte_end":17228,"line_start":469,"line_end":469,"column_start":5,"column_end":63}},{"value":"/            vec![\"* This is a\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17233,"byte_end":17267,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/                 \"  little\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17272,"byte_end":17303,"line_start":471,"line_end":471,"column_start":5,"column_end":36}},{"value":"/                 \"  example.\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17308,"byte_end":17343,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17348,"byte_end":17355,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17360,"byte_end":17363,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ [`self.subsequent_indent`]: #structfield.subsequent_indent","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17368,"byte_end":17430,"line_start":475,"line_end":475,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18254,"byte_end":18265,"line_start":503,"line_end":503,"column_start":12,"column_end":23},"name":"break_words","qualname":"<Options>::break_words","value":"pub fn break_words(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.break_words`]. This controls if words longer\n than `self.width` can be broken, or if they will be left\n sticking out into the right margin.","sig":null,"attributes":[{"value":"/ Change [`self.break_words`]. This controls if words longer","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17590,"byte_end":17652,"line_start":483,"line_end":483,"column_start":5,"column_end":67}},{"value":"/ than `self.width` can be broken, or if they will be left","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17657,"byte_end":17717,"line_start":484,"line_end":484,"column_start":5,"column_end":65}},{"value":"/ sticking out into the right margin.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17722,"byte_end":17761,"line_start":485,"line_end":485,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17766,"byte_end":17769,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17774,"byte_end":17788,"line_start":487,"line_end":487,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17793,"byte_end":17796,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17801,"byte_end":17808,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17813,"byte_end":17847,"line_start":490,"line_end":490,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17852,"byte_end":17855,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(4).break_words(true);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17860,"byte_end":17912,"line_start":492,"line_end":492,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17917,"byte_end":17975,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"/            vec![\"This\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":17980,"byte_end":18007,"line_start":494,"line_end":494,"column_start":5,"column_end":32}},{"value":"/                 \"is a\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18012,"byte_end":18039,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/                 \"litt\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18044,"byte_end":18071,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/                 \"le\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18076,"byte_end":18101,"line_start":497,"line_end":497,"column_start":5,"column_end":30}},{"value":"/                 \"exam\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18106,"byte_end":18133,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/                 \"ple.\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18138,"byte_end":18167,"line_start":499,"line_end":499,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18172,"byte_end":18179,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18184,"byte_end":18187,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ [`self.break_words`]: #structfield.break_words","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18192,"byte_end":18242,"line_start":502,"line_end":502,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18577,"byte_end":18591,"line_start":515,"line_end":515,"column_start":12,"column_end":26},"name":"wrap_algorithm","qualname":"<Options>::wrap_algorithm","value":"pub fn wrap_algorithm(Self, core::WrapAlgorithm) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.wrap_algorithm`].","sig":null,"attributes":[{"value":"/ Change [`self.wrap_algorithm`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18389,"byte_end":18424,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18429,"byte_end":18432,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ See [`core::WrapAlgorithm`] for details on the choices.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18437,"byte_end":18496,"line_start":512,"line_end":512,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18501,"byte_end":18504,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ [`self.wrap_algorithm`]: #structfield.wrap_algorithm","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18509,"byte_end":18565,"line_start":514,"line_end":514,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19523,"byte_end":19531,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"splitter","qualname":"<Options>::splitter","value":"pub fn splitter<T>(Self, T) -> Options","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.splitter`]. The [`WordSplitter`] is used to fit\n part of a word into the current line when wrapping text.","sig":null,"attributes":[{"value":"/ Change [`self.splitter`]. The [`WordSplitter`] is used to fit","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18731,"byte_end":18796,"line_start":522,"line_end":522,"column_start":5,"column_end":70}},{"value":"/ part of a word into the current line when wrapping text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18801,"byte_end":18861,"line_start":523,"line_end":523,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18866,"byte_end":18869,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This function may return a different type than `Self`. That is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18874,"byte_end":18940,"line_start":525,"line_end":525,"column_start":5,"column_end":71}},{"value":"/ the case when the given `splitter` is of a different type the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":18945,"byte_end":19010,"line_start":526,"line_end":526,"column_start":5,"column_end":70}},{"value":"/ the currently stored one in the `splitter` field. Take for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19015,"byte_end":19077,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19082,"byte_end":19094,"line_start":528,"line_end":528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19099,"byte_end":19102,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19107,"byte_end":19114,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{HyphenSplitter, NoHyphenation, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19119,"byte_end":19178,"line_start":531,"line_end":531,"column_start":5,"column_end":64}},{"value":"/ // The default type returned by `new` is `Options<HyphenSplitter>`","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19183,"byte_end":19253,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/ let opt: Options<HyphenSplitter> = Options::new(80);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19258,"byte_end":19314,"line_start":533,"line_end":533,"column_start":5,"column_end":61}},{"value":"/ // Setting a different splitter changes the type","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19319,"byte_end":19371,"line_start":534,"line_end":534,"column_start":5,"column_end":57}},{"value":"/ let opt: Options<NoHyphenation> = opt.splitter(NoHyphenation);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19376,"byte_end":19442,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19447,"byte_end":19454,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19459,"byte_end":19462,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [`self.splitter`]: #structfield.splitter","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":19467,"byte_end":19511,"line_start":538,"line_end":538,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21654,"byte_end":21658,"line_start":609,"line_end":609,"column_start":8,"column_end":12},"name":"fill","qualname":"::fill","value":"pub fn fill<'a, S, Opt>(&str, Opt) -> String where S: WordSplitter,\nOpt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Fill a line of text at a given width.","sig":null,"attributes":[{"value":"/ Fill a line of text at a given width.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":20751,"byte_end":20792,"line_start":577,"line_end":577,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":20793,"byte_end":20796,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ The result is a [`String`], complete with newlines between each","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":20797,"byte_end":20864,"line_start":579,"line_end":579,"column_start":1,"column_end":68}},{"value":"/ line. Use the [`wrap`] function if you need access to the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":20865,"byte_end":20926,"line_start":580,"line_end":580,"column_start":1,"column_end":62}},{"value":"/ individual lines.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":20927,"byte_end":20948,"line_start":581,"line_end":581,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":20949,"byte_end":20952,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use this function is to pass an integer for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":20953,"byte_end":21019,"line_start":583,"line_end":583,"column_start":1,"column_end":67}},{"value":"/ `width_or_options`:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21020,"byte_end":21043,"line_start":584,"line_end":584,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21044,"byte_end":21047,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21048,"byte_end":21055,"line_start":586,"line_end":586,"column_start":1,"column_end":8}},{"value":"/ use textwrap::fill;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21056,"byte_end":21079,"line_start":587,"line_end":587,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21080,"byte_end":21083,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21084,"byte_end":21099,"line_start":589,"line_end":589,"column_start":1,"column_end":16}},{"value":"/     fill(\"Memory safety without garbage collection.\", 15),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21100,"byte_end":21162,"line_start":590,"line_end":590,"column_start":1,"column_end":63}},{"value":"/     \"Memory safety\\nwithout garbage\\ncollection.\"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21163,"byte_end":21216,"line_start":591,"line_end":591,"column_start":1,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21217,"byte_end":21223,"line_start":592,"line_end":592,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21224,"byte_end":21231,"line_start":593,"line_end":593,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21232,"byte_end":21235,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ If you need to customize the wrapping, you can pass an [`Options`]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21236,"byte_end":21306,"line_start":595,"line_end":595,"column_start":1,"column_end":71}},{"value":"/ instead of an `usize`:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21307,"byte_end":21333,"line_start":596,"line_end":596,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21334,"byte_end":21337,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21338,"byte_end":21345,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{fill, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21346,"byte_end":21380,"line_start":599,"line_end":599,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21381,"byte_end":21384,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21385,"byte_end":21419,"line_start":601,"line_end":601,"column_start":1,"column_end":35}},{"value":"/     .initial_indent(\"- \")","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21420,"byte_end":21449,"line_start":602,"line_end":602,"column_start":1,"column_end":30}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21450,"byte_end":21483,"line_start":603,"line_end":603,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21484,"byte_end":21499,"line_start":604,"line_end":604,"column_start":1,"column_end":16}},{"value":"/     fill(\"Memory safety without garbage collection.\", &options),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21500,"byte_end":21568,"line_start":605,"line_end":605,"column_start":1,"column_end":69}},{"value":"/     \"- Memory safety\\n  without\\n  garbage\\n  collection.\"","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21569,"byte_end":21631,"line_start":606,"line_end":606,"column_start":1,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21632,"byte_end":21638,"line_start":607,"line_end":607,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":21639,"byte_end":21646,"line_start":608,"line_end":608,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23437,"byte_end":23443,"line_start":674,"line_end":674,"column_start":8,"column_end":14},"name":"unfill","qualname":"::unfill","value":"pub fn unfill<'a>(&'a str) -> (String, Options)","parent":null,"children":[],"decl_id":null,"docs":" Unpack a paragraph of already-wrapped text.","sig":null,"attributes":[{"value":"/ Unpack a paragraph of already-wrapped text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22110,"byte_end":22157,"line_start":628,"line_end":628,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22158,"byte_end":22161,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ This function attempts to recover the original text from a single","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22162,"byte_end":22231,"line_start":630,"line_end":630,"column_start":1,"column_end":70}},{"value":"/ paragraph of text produced by the [`fill`] function. This means","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22232,"byte_end":22299,"line_start":631,"line_end":631,"column_start":1,"column_end":68}},{"value":"/ that it turns","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22300,"byte_end":22317,"line_start":632,"line_end":632,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22318,"byte_end":22321,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22322,"byte_end":22333,"line_start":634,"line_end":634,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22334,"byte_end":22355,"line_start":635,"line_end":635,"column_start":1,"column_end":22}},{"value":"/ library for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22356,"byte_end":22371,"line_start":636,"line_end":636,"column_start":1,"column_end":16}},{"value":"/ wrapping text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22372,"byte_end":22390,"line_start":637,"line_end":637,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22391,"byte_end":22398,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22399,"byte_end":22402,"line_start":639,"line_end":639,"column_start":1,"column_end":4}},{"value":"/ back into","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22403,"byte_end":22416,"line_start":640,"line_end":640,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22417,"byte_end":22420,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22421,"byte_end":22432,"line_start":642,"line_end":642,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small library for wrapping text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22433,"byte_end":22481,"line_start":643,"line_end":643,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22482,"byte_end":22489,"line_start":644,"line_end":644,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22490,"byte_end":22493,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ In addition, it will recognize a common prefix among the lines.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22494,"byte_end":22561,"line_start":646,"line_end":646,"column_start":1,"column_end":68}},{"value":"/ The prefix of the first line is returned in","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22562,"byte_end":22609,"line_start":647,"line_end":647,"column_start":1,"column_end":48}},{"value":"/ [`Options::initial_indent`] and the prefix (if any) of the the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22610,"byte_end":22676,"line_start":648,"line_end":648,"column_start":1,"column_end":67}},{"value":"/ other lines is returned in [`Options::subsequent_indent`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22677,"byte_end":22739,"line_start":649,"line_end":649,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22740,"byte_end":22743,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ In addition to `' '`, the prefixes can consist of characters used","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22744,"byte_end":22813,"line_start":651,"line_end":651,"column_start":1,"column_end":70}},{"value":"/ for unordered lists (`'-'`, `'+'`, and `'*'`) and block quotes","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22814,"byte_end":22880,"line_start":652,"line_end":652,"column_start":1,"column_end":67}},{"value":"/ (`'>'`) in Markdown as well as characters often used for inline","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22881,"byte_end":22948,"line_start":653,"line_end":653,"column_start":1,"column_end":68}},{"value":"/ comments (`'#'` and `'/'`).","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22949,"byte_end":22980,"line_start":654,"line_end":654,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22981,"byte_end":22984,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ The text must come from a single wrapped paragraph. This means","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":22985,"byte_end":23051,"line_start":656,"line_end":656,"column_start":1,"column_end":67}},{"value":"/ that there can be no `\"\\n\\n\"` within the text.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23052,"byte_end":23102,"line_start":657,"line_end":657,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23103,"byte_end":23106,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23107,"byte_end":23121,"line_start":659,"line_end":659,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23122,"byte_end":23125,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23126,"byte_end":23133,"line_start":661,"line_end":661,"column_start":1,"column_end":8}},{"value":"/ use textwrap::unfill;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23134,"byte_end":23159,"line_start":662,"line_end":662,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23160,"byte_end":23163,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ let (text, options) = unfill(\"\\","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23164,"byte_end":23199,"line_start":664,"line_end":664,"column_start":1,"column_end":36}},{"value":"/ * This is an","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23200,"byte_end":23216,"line_start":665,"line_end":665,"column_start":1,"column_end":17}},{"value":"/   example of","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23217,"byte_end":23233,"line_start":666,"line_end":666,"column_start":1,"column_end":17}},{"value":"/   a list item.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23234,"byte_end":23252,"line_start":667,"line_end":667,"column_start":1,"column_end":19}},{"value":"/ \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23253,"byte_end":23260,"line_start":668,"line_end":668,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23261,"byte_end":23264,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(text, \"This is an example of a list item.\\n\");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23265,"byte_end":23326,"line_start":670,"line_end":670,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(options.initial_indent, \"* \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23327,"byte_end":23372,"line_start":671,"line_end":671,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(options.subsequent_indent, \"  \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23373,"byte_end":23421,"line_start":672,"line_end":672,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":23422,"byte_end":23429,"line_start":673,"line_end":673,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25633,"byte_end":25639,"line_start":741,"line_end":741,"column_start":8,"column_end":14},"name":"refill","qualname":"::refill","value":"pub fn refill<'a, S, Opt>(&str, Opt) -> String where S: WordSplitter,\nOpt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Refill a paragraph of wrapped text with a new width.","sig":null,"attributes":[{"value":"/ Refill a paragraph of wrapped text with a new width.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":24918,"byte_end":24974,"line_start":715,"line_end":715,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":24975,"byte_end":24978,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ This function will first use the [`unfill`] function to remove","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":24979,"byte_end":25045,"line_start":717,"line_end":717,"column_start":1,"column_end":67}},{"value":"/ newlines from the text. Afterwards the text is filled again using","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25046,"byte_end":25115,"line_start":718,"line_end":718,"column_start":1,"column_end":70}},{"value":"/ the [`fill`] function.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25116,"byte_end":25142,"line_start":719,"line_end":719,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25143,"byte_end":25146,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ The `new_width_or_options` argument specify the new width and can","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25147,"byte_end":25216,"line_start":721,"line_end":721,"column_start":1,"column_end":70}},{"value":"/ specify other options as well — except for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25217,"byte_end":25265,"line_start":722,"line_end":722,"column_start":1,"column_end":47}},{"value":"/ [`Options::initial_indent`] and [`Options::subsequent_indent`],","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25266,"byte_end":25333,"line_start":723,"line_end":723,"column_start":1,"column_end":68}},{"value":"/ which are deduced from `filled_text`.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25334,"byte_end":25375,"line_start":724,"line_end":724,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25376,"byte_end":25379,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25380,"byte_end":25394,"line_start":726,"line_end":726,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25395,"byte_end":25398,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25399,"byte_end":25406,"line_start":728,"line_end":728,"column_start":1,"column_end":8}},{"value":"/ use textwrap::refill;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25407,"byte_end":25432,"line_start":729,"line_end":729,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25433,"byte_end":25436,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ let text = \"\\","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25437,"byte_end":25454,"line_start":731,"line_end":731,"column_start":1,"column_end":18}},{"value":"/ > Memory safety without","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25455,"byte_end":25482,"line_start":732,"line_end":732,"column_start":1,"column_end":28}},{"value":"/ > garbage collection.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25483,"byte_end":25508,"line_start":733,"line_end":733,"column_start":1,"column_end":26}},{"value":"/ \";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25509,"byte_end":25515,"line_start":734,"line_end":734,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(refill(text, 15), \"\\","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25516,"byte_end":25551,"line_start":735,"line_end":735,"column_start":1,"column_end":36}},{"value":"/ > Memory safety","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25552,"byte_end":25571,"line_start":736,"line_end":736,"column_start":1,"column_end":20}},{"value":"/ > without","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25572,"byte_end":25585,"line_start":737,"line_end":737,"column_start":1,"column_end":14}},{"value":"/ > garbage","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25586,"byte_end":25599,"line_start":738,"line_end":738,"column_start":1,"column_end":14}},{"value":"/ > collection.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25600,"byte_end":25617,"line_start":739,"line_end":739,"column_start":1,"column_end":18}},{"value":"/ \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":25618,"byte_end":25625,"line_start":740,"line_end":740,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":30039,"byte_end":30043,"line_start":879,"line_end":879,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"pub fn wrap<'a, S, Opt>(&str, Opt) -> Vec<Cow<, str>> where S: WordSplitter,\nOpt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a line of text at a given width.","sig":null,"attributes":[{"value":"/ Wrap a line of text at a given width.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26159,"byte_end":26200,"line_start":756,"line_end":756,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26201,"byte_end":26204,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ The result is a vector of lines, each line is of type [`Cow<'_,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26205,"byte_end":26272,"line_start":758,"line_end":758,"column_start":1,"column_end":68}},{"value":"/ str>`](Cow), which means that the line will borrow from the input","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26273,"byte_end":26342,"line_start":759,"line_end":759,"column_start":1,"column_end":70}},{"value":"/ `&str` if possible. The lines do not have a trailing `'\\n'`. Use","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26343,"byte_end":26411,"line_start":760,"line_end":760,"column_start":1,"column_end":69}},{"value":"/ the [`fill`] function if you need a [`String`] instead.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26412,"byte_end":26471,"line_start":761,"line_end":761,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26472,"byte_end":26475,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use this function is to pass an integer for","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26476,"byte_end":26542,"line_start":763,"line_end":763,"column_start":1,"column_end":67}},{"value":"/ `width_or_options`:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26543,"byte_end":26566,"line_start":764,"line_end":764,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26567,"byte_end":26570,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26571,"byte_end":26578,"line_start":766,"line_end":766,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26579,"byte_end":26602,"line_start":767,"line_end":767,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26603,"byte_end":26606,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ let lines = wrap(\"Memory safety without garbage collection.\", 15);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26607,"byte_end":26677,"line_start":769,"line_end":769,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(lines, &[","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26678,"byte_end":26702,"line_start":770,"line_end":770,"column_start":1,"column_end":25}},{"value":"/     \"Memory safety\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26703,"byte_end":26727,"line_start":771,"line_end":771,"column_start":1,"column_end":25}},{"value":"/     \"without garbage\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26728,"byte_end":26754,"line_start":772,"line_end":772,"column_start":1,"column_end":27}},{"value":"/     \"collection.\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26755,"byte_end":26777,"line_start":773,"line_end":773,"column_start":1,"column_end":23}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26778,"byte_end":26785,"line_start":774,"line_end":774,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26786,"byte_end":26793,"line_start":775,"line_end":775,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26794,"byte_end":26797,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ If you need to customize the wrapping, you can pass an [`Options`]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26798,"byte_end":26868,"line_start":777,"line_end":777,"column_start":1,"column_end":71}},{"value":"/ instead of an `usize`:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26869,"byte_end":26895,"line_start":778,"line_end":778,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26896,"byte_end":26899,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26900,"byte_end":26907,"line_start":780,"line_end":780,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26908,"byte_end":26942,"line_start":781,"line_end":781,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26943,"byte_end":26946,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26947,"byte_end":26981,"line_start":783,"line_end":783,"column_start":1,"column_end":35}},{"value":"/     .initial_indent(\"- \")","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":26982,"byte_end":27011,"line_start":784,"line_end":784,"column_start":1,"column_end":30}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27012,"byte_end":27045,"line_start":785,"line_end":785,"column_start":1,"column_end":34}},{"value":"/ let lines = wrap(\"Memory safety without garbage collection.\", &options);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27046,"byte_end":27122,"line_start":786,"line_end":786,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(lines, &[","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27123,"byte_end":27147,"line_start":787,"line_end":787,"column_start":1,"column_end":25}},{"value":"/     \"- Memory safety\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27148,"byte_end":27174,"line_start":788,"line_end":788,"column_start":1,"column_end":27}},{"value":"/     \"  without\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27175,"byte_end":27195,"line_start":789,"line_end":789,"column_start":1,"column_end":21}},{"value":"/     \"  garbage\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27196,"byte_end":27216,"line_start":790,"line_end":790,"column_start":1,"column_end":21}},{"value":"/     \"  collection.\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27217,"byte_end":27241,"line_start":791,"line_end":791,"column_start":1,"column_end":25}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27242,"byte_end":27249,"line_start":792,"line_end":792,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27250,"byte_end":27257,"line_start":793,"line_end":793,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27258,"byte_end":27261,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ # Optimal-Fit Wrapping","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27262,"byte_end":27288,"line_start":795,"line_end":795,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27289,"byte_end":27292,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ By default, `wrap` will try to ensure an even right margin by","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27293,"byte_end":27358,"line_start":797,"line_end":797,"column_start":1,"column_end":66}},{"value":"/ finding breaks which avoid short lines. We call this an","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27359,"byte_end":27418,"line_start":798,"line_end":798,"column_start":1,"column_end":60}},{"value":"/ “optimal-fit algorithm” since the line breaks are computed by","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27419,"byte_end":27488,"line_start":799,"line_end":799,"column_start":1,"column_end":66}},{"value":"/ considering all possible line breaks. The alternative is a","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27489,"byte_end":27551,"line_start":800,"line_end":800,"column_start":1,"column_end":63}},{"value":"/ “first-fit algorithm” which simply accumulates words until they no","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27552,"byte_end":27626,"line_start":801,"line_end":801,"column_start":1,"column_end":71}},{"value":"/ longer fit on the line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27627,"byte_end":27654,"line_start":802,"line_end":802,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27655,"byte_end":27658,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ As an example, using the first-fit algorithm to wrap the famous","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27659,"byte_end":27726,"line_start":804,"line_end":804,"column_start":1,"column_end":68}},{"value":"/ Hamlet quote “To be, or not to be: that is the question” in a","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27727,"byte_end":27796,"line_start":805,"line_end":805,"column_start":1,"column_end":66}},{"value":"/ narrow column with room for only 10 characters looks like this:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27797,"byte_end":27864,"line_start":806,"line_end":806,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27865,"byte_end":27868,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27869,"byte_end":27876,"line_start":808,"line_end":808,"column_start":1,"column_end":8}},{"value":"/ # use textwrap::{Options, wrap};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27877,"byte_end":27913,"line_start":809,"line_end":809,"column_start":1,"column_end":37}},{"value":"/ # use textwrap::core::WrapAlgorithm::FirstFit;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27914,"byte_end":27964,"line_start":810,"line_end":810,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27965,"byte_end":27970,"line_start":811,"line_end":811,"column_start":1,"column_end":6}},{"value":"/ # let lines = wrap(\"To be, or not to be: that is the question\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":27971,"byte_end":28038,"line_start":812,"line_end":812,"column_start":1,"column_end":68}},{"value":"/ #                  Options::new(10).wrap_algorithm(FirstFit));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28039,"byte_end":28105,"line_start":813,"line_end":813,"column_start":1,"column_end":67}},{"value":"/ # assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28106,"byte_end":28150,"line_start":814,"line_end":814,"column_start":1,"column_end":45}},{"value":"/ To be, or","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28151,"byte_end":28164,"line_start":815,"line_end":815,"column_start":1,"column_end":14}},{"value":"/ not to be:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28165,"byte_end":28179,"line_start":816,"line_end":816,"column_start":1,"column_end":15}},{"value":"/ that is","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28180,"byte_end":28191,"line_start":817,"line_end":817,"column_start":1,"column_end":12}},{"value":"/ the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28192,"byte_end":28199,"line_start":818,"line_end":818,"column_start":1,"column_end":8}},{"value":"/ question","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28200,"byte_end":28212,"line_start":819,"line_end":819,"column_start":1,"column_end":13}},{"value":"/ # \");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28213,"byte_end":28222,"line_start":820,"line_end":820,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28223,"byte_end":28230,"line_start":821,"line_end":821,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28231,"byte_end":28234,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ Notice how the second to last line is quite narrow because","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28235,"byte_end":28297,"line_start":823,"line_end":823,"column_start":1,"column_end":63}},{"value":"/ “question” was too large to fit? The greedy first-fit algorithm","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28298,"byte_end":28369,"line_start":824,"line_end":824,"column_start":1,"column_end":68}},{"value":"/ doesn’t look ahead, so it has no other option than to put","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28370,"byte_end":28433,"line_start":825,"line_end":825,"column_start":1,"column_end":62}},{"value":"/ “question” onto its own line.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28434,"byte_end":28471,"line_start":826,"line_end":826,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28472,"byte_end":28475,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ With the optimal-fit wrapping algorithm, the previous lines are","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28476,"byte_end":28543,"line_start":828,"line_end":828,"column_start":1,"column_end":68}},{"value":"/ shortened slightly in order to make the word “is” go into the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28544,"byte_end":28613,"line_start":829,"line_end":829,"column_start":1,"column_end":66}},{"value":"/ second last line:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28614,"byte_end":28635,"line_start":830,"line_end":830,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28636,"byte_end":28639,"line_start":831,"line_end":831,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28640,"byte_end":28647,"line_start":832,"line_end":832,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"smawk\")] {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28648,"byte_end":28681,"line_start":833,"line_end":833,"column_start":1,"column_end":34}},{"value":"/ # use textwrap::{Options, wrap};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28682,"byte_end":28718,"line_start":834,"line_end":834,"column_start":1,"column_end":37}},{"value":"/ # use textwrap::core::WrapAlgorithm::OptimalFit;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28719,"byte_end":28771,"line_start":835,"line_end":835,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28772,"byte_end":28777,"line_start":836,"line_end":836,"column_start":1,"column_end":6}},{"value":"/ # let lines = wrap(\"To be, or not to be: that is the question\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28778,"byte_end":28845,"line_start":837,"line_end":837,"column_start":1,"column_end":68}},{"value":"/ #                  Options::new(10).wrap_algorithm(OptimalFit));","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28846,"byte_end":28914,"line_start":838,"line_end":838,"column_start":1,"column_end":69}},{"value":"/ # assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28915,"byte_end":28959,"line_start":839,"line_end":839,"column_start":1,"column_end":45}},{"value":"/ To be,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28960,"byte_end":28970,"line_start":840,"line_end":840,"column_start":1,"column_end":11}},{"value":"/ or not to","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28971,"byte_end":28984,"line_start":841,"line_end":841,"column_start":1,"column_end":14}},{"value":"/ be: that","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28985,"byte_end":28997,"line_start":842,"line_end":842,"column_start":1,"column_end":13}},{"value":"/ is the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":28998,"byte_end":29008,"line_start":843,"line_end":843,"column_start":1,"column_end":11}},{"value":"/ question","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29009,"byte_end":29021,"line_start":844,"line_end":844,"column_start":1,"column_end":13}},{"value":"/ # \"); }","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29022,"byte_end":29033,"line_start":845,"line_end":845,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29034,"byte_end":29041,"line_start":846,"line_end":846,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29042,"byte_end":29045,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ Please see [`core::WrapAlgorithm`] for details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29046,"byte_end":29097,"line_start":848,"line_end":848,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29098,"byte_end":29101,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29102,"byte_end":29116,"line_start":850,"line_end":850,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29117,"byte_end":29120,"line_start":851,"line_end":851,"column_start":1,"column_end":4}},{"value":"/ The returned iterator yields lines of type `Cow<'_, str>`. If","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29121,"byte_end":29186,"line_start":852,"line_end":852,"column_start":1,"column_end":66}},{"value":"/ possible, the wrapped lines will borrow from the input string. As","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29187,"byte_end":29256,"line_start":853,"line_end":853,"column_start":1,"column_end":70}},{"value":"/ an example, a hanging indentation, the first line can borrow from","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29257,"byte_end":29326,"line_start":854,"line_end":854,"column_start":1,"column_end":70}},{"value":"/ the input, but the subsequent lines become owned strings:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29327,"byte_end":29388,"line_start":855,"line_end":855,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29389,"byte_end":29392,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29393,"byte_end":29400,"line_start":857,"line_end":857,"column_start":1,"column_end":8}},{"value":"/ use std::borrow::Cow::{Borrowed, Owned};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29401,"byte_end":29445,"line_start":858,"line_end":858,"column_start":1,"column_end":45}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29446,"byte_end":29480,"line_start":859,"line_end":859,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29481,"byte_end":29484,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15).subsequent_indent(\"....\");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29485,"byte_end":29546,"line_start":861,"line_end":861,"column_start":1,"column_end":62}},{"value":"/ let lines = wrap(\"Wrapping text all day long.\", &options);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29547,"byte_end":29609,"line_start":862,"line_end":862,"column_start":1,"column_end":63}},{"value":"/ let annotated = lines","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29610,"byte_end":29635,"line_start":863,"line_end":863,"column_start":1,"column_end":26}},{"value":"/     .iter()","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29636,"byte_end":29651,"line_start":864,"line_end":864,"column_start":1,"column_end":16}},{"value":"/     .map(|line| match line {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29652,"byte_end":29684,"line_start":865,"line_end":865,"column_start":1,"column_end":33}},{"value":"/         Borrowed(text) => format!(\"[Borrowed] {}\", text),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29685,"byte_end":29746,"line_start":866,"line_end":866,"column_start":1,"column_end":62}},{"value":"/         Owned(text) => format!(\"[Owned]    {}\", text),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29747,"byte_end":29805,"line_start":867,"line_end":867,"column_start":1,"column_end":59}},{"value":"/     })","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29806,"byte_end":29816,"line_start":868,"line_end":868,"column_start":1,"column_end":11}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29817,"byte_end":29846,"line_start":869,"line_end":869,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29847,"byte_end":29862,"line_start":870,"line_end":870,"column_start":1,"column_end":16}},{"value":"/     annotated,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29863,"byte_end":29881,"line_start":871,"line_end":871,"column_start":1,"column_end":19}},{"value":"/     &[","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29882,"byte_end":29892,"line_start":872,"line_end":872,"column_start":1,"column_end":11}},{"value":"/         \"[Borrowed] Wrapping text\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29893,"byte_end":29932,"line_start":873,"line_end":873,"column_start":1,"column_end":40}},{"value":"/         \"[Owned]    ....all day\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29933,"byte_end":29970,"line_start":874,"line_end":874,"column_start":1,"column_end":38}},{"value":"/         \"[Owned]    ....long.\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":29971,"byte_end":30006,"line_start":875,"line_end":875,"column_start":1,"column_end":36}},{"value":"/     ]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":30007,"byte_end":30016,"line_start":876,"line_end":876,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":30017,"byte_end":30023,"line_start":877,"line_end":877,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":30024,"byte_end":30031,"line_start":878,"line_end":878,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35914,"byte_end":35926,"line_start":1027,"line_end":1027,"column_start":8,"column_end":20},"name":"wrap_columns","qualname":"::wrap_columns","value":"pub fn wrap_columns<'a, S, Opt>(&str, usize, Opt, &str, &str, &str)\n-> Vec<String> where S: WordSplitter, Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Wrap text into columns with a given total width.","sig":null,"attributes":[{"value":"/ Wrap text into columns with a given total width.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33540,"byte_end":33592,"line_start":970,"line_end":970,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33593,"byte_end":33596,"line_start":971,"line_end":971,"column_start":1,"column_end":4}},{"value":"/ The `left_gap`, `mid_gap` and `right_gap` arguments specify the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33597,"byte_end":33664,"line_start":972,"line_end":972,"column_start":1,"column_end":68}},{"value":"/ strings to insert before, between, and after the columns. The","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33665,"byte_end":33730,"line_start":973,"line_end":973,"column_start":1,"column_end":66}},{"value":"/ total width of all columns and all gaps is specified using the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33731,"byte_end":33797,"line_start":974,"line_end":974,"column_start":1,"column_end":67}},{"value":"/ `total_width_or_options` argument. This argument can simply be an","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33798,"byte_end":33867,"line_start":975,"line_end":975,"column_start":1,"column_end":70}},{"value":"/ integer if you want to use default settings when wrapping, or it","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33868,"byte_end":33936,"line_start":976,"line_end":976,"column_start":1,"column_end":69}},{"value":"/ can be a [`Options`] value if you want to customize the wrapping.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":33937,"byte_end":34006,"line_start":977,"line_end":977,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34007,"byte_end":34010,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ If the columns are narrow, it is recommended to set","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34011,"byte_end":34066,"line_start":979,"line_end":979,"column_start":1,"column_end":56}},{"value":"/ [`Options::break_words`] to `true` to prevent words from","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34067,"byte_end":34127,"line_start":980,"line_end":980,"column_start":1,"column_end":61}},{"value":"/ protruding into the margins.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34128,"byte_end":34160,"line_start":981,"line_end":981,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34161,"byte_end":34164,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ The per-column width is computed like this:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34165,"byte_end":34212,"line_start":983,"line_end":983,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34213,"byte_end":34216,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34217,"byte_end":34224,"line_start":985,"line_end":985,"column_start":1,"column_end":8}},{"value":"/ # let (left_gap, middle_gap, right_gap) = (\"\", \"\", \"\");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34225,"byte_end":34284,"line_start":986,"line_end":986,"column_start":1,"column_end":60}},{"value":"/ # let columns = 2;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34285,"byte_end":34307,"line_start":987,"line_end":987,"column_start":1,"column_end":23}},{"value":"/ # let options = textwrap::Options::new(80);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34308,"byte_end":34355,"line_start":988,"line_end":988,"column_start":1,"column_end":48}},{"value":"/ let inner_width = options.width","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34356,"byte_end":34391,"line_start":989,"line_end":989,"column_start":1,"column_end":36}},{"value":"/     - textwrap::core::display_width(left_gap)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34392,"byte_end":34441,"line_start":990,"line_end":990,"column_start":1,"column_end":50}},{"value":"/     - textwrap::core::display_width(right_gap)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34442,"byte_end":34492,"line_start":991,"line_end":991,"column_start":1,"column_end":51}},{"value":"/     - textwrap::core::display_width(middle_gap) * (columns - 1);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34493,"byte_end":34561,"line_start":992,"line_end":992,"column_start":1,"column_end":69}},{"value":"/ let column_width = inner_width / columns;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34562,"byte_end":34607,"line_start":993,"line_end":993,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34608,"byte_end":34615,"line_start":994,"line_end":994,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34616,"byte_end":34619,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ The `text` is wrapped using [`wrap`] and the given `options`","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34620,"byte_end":34684,"line_start":996,"line_end":996,"column_start":1,"column_end":65}},{"value":"/ argument, but the width is overwritten to the computed","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34685,"byte_end":34743,"line_start":997,"line_end":997,"column_start":1,"column_end":59}},{"value":"/ `column_width`.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34744,"byte_end":34763,"line_start":998,"line_end":998,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34764,"byte_end":34767,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34768,"byte_end":34780,"line_start":1000,"line_end":1000,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34781,"byte_end":34784,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ Panics if `columns` is zero.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34785,"byte_end":34817,"line_start":1002,"line_end":1002,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34818,"byte_end":34821,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34822,"byte_end":34836,"line_start":1004,"line_end":1004,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34837,"byte_end":34840,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34841,"byte_end":34848,"line_start":1006,"line_end":1006,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap_columns;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34849,"byte_end":34880,"line_start":1007,"line_end":1007,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34881,"byte_end":34884,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ let text = \"\\","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34885,"byte_end":34902,"line_start":1009,"line_end":1009,"column_start":1,"column_end":18}},{"value":"/ This is an example text, which is wrapped into three columns. \\","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34903,"byte_end":34970,"line_start":1010,"line_end":1010,"column_start":1,"column_end":68}},{"value":"/ Notice how the final column can be shorter than the others.\";","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":34971,"byte_end":35036,"line_start":1011,"line_end":1011,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35037,"byte_end":35040,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35041,"byte_end":35070,"line_start":1013,"line_end":1013,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35071,"byte_end":35131,"line_start":1014,"line_end":1014,"column_start":1,"column_end":61}},{"value":"/            vec![\"| This is       | into three    | column can be  |\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35132,"byte_end":35205,"line_start":1015,"line_end":1015,"column_start":1,"column_end":74}},{"value":"/                 \"| an example    | columns.      | shorter than   |\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35206,"byte_end":35279,"line_start":1016,"line_end":1016,"column_start":1,"column_end":74}},{"value":"/                 \"| text, which   | Notice how    | the others.    |\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35280,"byte_end":35353,"line_start":1017,"line_end":1017,"column_start":1,"column_end":74}},{"value":"/                 \"| is wrapped    | the final     |                |\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35354,"byte_end":35429,"line_start":1018,"line_end":1018,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35430,"byte_end":35433,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ // Without the `smawk` feature, the middle column is a little more uneven:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35434,"byte_end":35512,"line_start":1020,"line_end":1020,"column_start":1,"column_end":79}},{"value":"/ #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35513,"byte_end":35547,"line_start":1021,"line_end":1021,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35548,"byte_end":35608,"line_start":1022,"line_end":1022,"column_start":1,"column_end":61}},{"value":"/            vec![\"| This is an    | three         | column can be  |\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35609,"byte_end":35682,"line_start":1023,"line_end":1023,"column_start":1,"column_end":74}},{"value":"/                 \"| example text, | columns.      | shorter than   |\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35683,"byte_end":35756,"line_start":1024,"line_end":1024,"column_start":1,"column_end":74}},{"value":"/                 \"| which is      | Notice how    | the others.    |\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35757,"byte_end":35830,"line_start":1025,"line_end":1025,"column_start":1,"column_end":74}},{"value":"/                 \"| wrapped into  | the final     |                |\"]);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":35831,"byte_end":35906,"line_start":1026,"line_end":1026,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39428,"byte_end":39440,"line_start":1131,"line_end":1131,"column_start":8,"column_end":20},"name":"fill_inplace","qualname":"::fill_inplace","value":"pub fn fill_inplace(&mut String, usize)","parent":null,"children":[],"decl_id":null,"docs":" Fill `text` in-place without reallocating the input string.","sig":null,"attributes":[{"value":"/ Fill `text` in-place without reallocating the input string.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37603,"byte_end":37666,"line_start":1081,"line_end":1081,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37667,"byte_end":37670,"line_start":1082,"line_end":1082,"column_start":1,"column_end":4}},{"value":"/ This function works by modifying the input string: some `' '`","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37671,"byte_end":37736,"line_start":1083,"line_end":1083,"column_start":1,"column_end":66}},{"value":"/ characters will be replaced by `'\\n'` characters. The rest of the","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37737,"byte_end":37806,"line_start":1084,"line_end":1084,"column_start":1,"column_end":70}},{"value":"/ text remains untouched.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37807,"byte_end":37834,"line_start":1085,"line_end":1085,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37835,"byte_end":37838,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ Since we can only replace existing whitespace in the input with","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37839,"byte_end":37906,"line_start":1087,"line_end":1087,"column_start":1,"column_end":68}},{"value":"/ `'\\n'`, we cannot do hyphenation nor can we split words longer","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37907,"byte_end":37973,"line_start":1088,"line_end":1088,"column_start":1,"column_end":67}},{"value":"/ than the line width. Indentation is also ruled out. In other","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":37974,"byte_end":38038,"line_start":1089,"line_end":1089,"column_start":1,"column_end":65}},{"value":"/ words, `fill_inplace(width)` behaves as if you had called [`fill`]","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38039,"byte_end":38109,"line_start":1090,"line_end":1090,"column_start":1,"column_end":71}},{"value":"/ with these options:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38110,"byte_end":38133,"line_start":1091,"line_end":1091,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38134,"byte_end":38137,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38138,"byte_end":38145,"line_start":1093,"line_end":1093,"column_start":1,"column_end":8}},{"value":"/ # use textwrap::{Options, NoHyphenation};","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38146,"byte_end":38191,"line_start":1094,"line_end":1094,"column_start":1,"column_end":46}},{"value":"/ # let width = 80;","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38192,"byte_end":38213,"line_start":1095,"line_end":1095,"column_start":1,"column_end":22}},{"value":"/ Options {","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38214,"byte_end":38227,"line_start":1096,"line_end":1096,"column_start":1,"column_end":14}},{"value":"/     width: width,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38228,"byte_end":38249,"line_start":1097,"line_end":1097,"column_start":1,"column_end":22}},{"value":"/     initial_indent: \"\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38250,"byte_end":38277,"line_start":1098,"line_end":1098,"column_start":1,"column_end":28}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38278,"byte_end":38308,"line_start":1099,"line_end":1099,"column_start":1,"column_end":31}},{"value":"/     break_words: false,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38309,"byte_end":38336,"line_start":1100,"line_end":1100,"column_start":1,"column_end":28}},{"value":"/     wrap_algorithm: textwrap::core::WrapAlgorithm::FirstFit,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38337,"byte_end":38401,"line_start":1101,"line_end":1101,"column_start":1,"column_end":65}},{"value":"/     splitter: NoHyphenation,","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38402,"byte_end":38434,"line_start":1102,"line_end":1102,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38435,"byte_end":38441,"line_start":1103,"line_end":1103,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38442,"byte_end":38449,"line_start":1104,"line_end":1104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38450,"byte_end":38453,"line_start":1105,"line_end":1105,"column_start":1,"column_end":4}},{"value":"/ The wrap algorithm is [`core::WrapAlgorithm::FirstFit`] since this","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38454,"byte_end":38524,"line_start":1106,"line_end":1106,"column_start":1,"column_end":71}},{"value":"/ is the fastest algorithm — and the main reason to use","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38525,"byte_end":38584,"line_start":1107,"line_end":1107,"column_start":1,"column_end":58}},{"value":"/ `fill_inplace` is to get the string broken into newlines as fast","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38585,"byte_end":38653,"line_start":1108,"line_end":1108,"column_start":1,"column_end":69}},{"value":"/ as possible.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38654,"byte_end":38670,"line_start":1109,"line_end":1109,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38671,"byte_end":38674,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ A last difference is that (unlike [`fill`]) `fill_inplace` can","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38675,"byte_end":38741,"line_start":1111,"line_end":1111,"column_start":1,"column_end":67}},{"value":"/ leave trailing whitespace on lines. This is because we wrap by","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38742,"byte_end":38808,"line_start":1112,"line_end":1112,"column_start":1,"column_end":67}},{"value":"/ inserting a `'\\n'` at the final whitespace in the input string:","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38809,"byte_end":38876,"line_start":1113,"line_end":1113,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38877,"byte_end":38880,"line_start":1114,"line_end":1114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38881,"byte_end":38888,"line_start":1115,"line_end":1115,"column_start":1,"column_end":8}},{"value":"/ let mut text = String::from(\"Hello   World!\");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38889,"byte_end":38939,"line_start":1116,"line_end":1116,"column_start":1,"column_end":51}},{"value":"/ textwrap::fill_inplace(&mut text, 10);","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38940,"byte_end":38982,"line_start":1117,"line_end":1117,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(text, \"Hello  \\nWorld!\");","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":38983,"byte_end":39023,"line_start":1118,"line_end":1118,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39024,"byte_end":39031,"line_start":1119,"line_end":1119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39032,"byte_end":39035,"line_start":1120,"line_end":1120,"column_start":1,"column_end":4}},{"value":"/ If we didn't do this, the word `World!` would end up being","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39036,"byte_end":39098,"line_start":1121,"line_end":1121,"column_start":1,"column_end":63}},{"value":"/ indented. You can avoid this if you make sure that your input text","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39099,"byte_end":39169,"line_start":1122,"line_end":1122,"column_start":1,"column_end":71}},{"value":"/ has no double spaces.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39170,"byte_end":39195,"line_start":1123,"line_end":1123,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39196,"byte_end":39199,"line_start":1124,"line_end":1124,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39200,"byte_end":39217,"line_start":1125,"line_end":1125,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39218,"byte_end":39221,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ In benchmarks, `fill_inplace` is about twice as fast as [`fill`].","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39222,"byte_end":39291,"line_start":1127,"line_end":1127,"column_start":1,"column_end":70}},{"value":"/ Please see the [`linear`","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39292,"byte_end":39320,"line_start":1128,"line_end":1128,"column_start":1,"column_end":29}},{"value":"/ benchmark](https://github.com/mgeisler/textwrap/blob/master/benches/linear.rs)","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39321,"byte_end":39403,"line_start":1129,"line_end":1129,"column_start":1,"column_end":83}},{"value":"/ for details.","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":39404,"byte_end":39420,"line_start":1130,"line_end":1130,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72577,"byte_end":72580,"line_start":54,"line_end":54,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73385,"byte_end":73398,"line_start":84,"line_end":84,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":74113,"byte_end":74127,"line_start":105,"line_end":105,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":106277,"byte_end":106288,"line_start":10,"line_end":10,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83985,"byte_end":83989,"line_start":226,"line_end":226,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84095,"byte_end":84099,"line_start":234,"line_end":234,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86299,"byte_end":86303,"line_start":304,"line_end":304,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6937,"byte_end":6944,"line_start":210,"line_end":210,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7351,"byte_end":7358,"line_start":223,"line_end":223,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7513,"byte_end":7520,"line_start":230,"line_end":230,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12008,"byte_end":12015,"line_start":338,"line_end":338,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15560,"byte_end":15567,"line_start":421,"line_end":421,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":5765,"byte_end":5769,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":44}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":71849,"byte_end":71854,"line_start":36,"line_end":36,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":8812},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":72577,"byte_end":72580,"line_start":54,"line_end":54,"column_start":49,"column_end":52},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":73385,"byte_end":73398,"line_start":84,"line_end":84,"column_start":23,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":165},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\splitting.rs","byte_start":74113,"byte_end":74127,"line_start":105,"line_end":105,"column_start":23,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":172},"to":{"krate":0,"index":17}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core\\optimal_fit.rs","byte_start":106277,"byte_end":106288,"line_start":10,"line_end":10,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":59},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83180,"byte_end":83185,"line_start":201,"line_end":201,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":8812},"to":{"krate":0,"index":84}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":83985,"byte_end":83989,"line_start":226,"line_end":226,"column_start":26,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":179},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":84095,"byte_end":84099,"line_start":234,"line_end":234,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\core.rs","byte_start":86299,"byte_end":86303,"line_start":304,"line_end":304,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":179},"to":{"krate":0,"index":84}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":6937,"byte_end":6944,"line_start":210,"line_end":210,"column_start":50,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7351,"byte_end":7358,"line_start":223,"line_end":223,"column_start":26,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":7513,"byte_end":7520,"line_start":230,"line_end":230,"column_start":10,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":12008,"byte_end":12015,"line_start":338,"line_end":338,"column_start":13,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Miyu\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\textwrap-0.13.4\\src\\lib.rs","byte_start":15560,"byte_end":15567,"line_start":421,"line_end":421,"column_start":27,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}}]}